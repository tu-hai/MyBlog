{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Authentication/auth-component/auth-component.component.ts","webpack:///src/app/Authentication/auth-component/auth-component.component.html","webpack:///src/app/Authentication/resetpassword/resetpassword.component.ts","webpack:///src/app/Authentication/resetpassword/resetpassword.component.html","webpack:///src/app/Authentication/shared/acrud.service.ts","webpack:///src/app/Authentication/shared/auth-guard.service.ts","webpack:///src/app/Authentication/shared/auth.service.ts","webpack:///src/app/Authentication/shared/no-sanitize.pipe.ts","webpack:///src/app/Authentication/shared/user.model.ts","webpack:///src/app/Authentication/verify-mail/verify-mail.component.ts","webpack:///src/app/Authentication/verify-mail/verify-mail.component.html","webpack:///src/app/Unauthenticated/home/home.component.ts","webpack:///src/app/Unauthenticated/home/home.component.html","webpack:///src/app/Unauthenticated/shared/crud.service.ts","webpack:///src/app/Unauthenticated/u-create-post/u-create-post.component.ts","webpack:///src/app/Unauthenticated/u-create-post/u-create-post.component.html","webpack:///src/app/Unauthenticated/upost-detail/upost-detail.component.ts","webpack:///src/app/Unauthenticated/upost-detail/upost-detail.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/spinner/loading-spinner/loading-spinner.component.ts","webpack:///src/app/spinner/loading-spinner/loading-spinner.component.html","webpack:///src/app/user/profile/profile.component.ts","webpack:///src/app/user/profile/profile.component.html","webpack:///src/app/user/user-edit/user-edit.component.ts","webpack:///src/app/user/user-edit/user-edit.component.html","webpack:///src/app/user/user-post/user-post.component.ts","webpack:///src/app/user/user-post/user-post.component.html","webpack:///src/app/user/view-only-public-post/view-only-public-post.component.ts","webpack:///src/app/user/view-only-public-post/view-only-public-post.component.html","webpack:///src/app/user/view-profile/view-profile.component.ts","webpack:///src/app/user/view-profile/view-profile.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthComponentComponent","authService","acrud","router","isLoginMode","isLoading","error","isPorfileset","form","valid","email","value","password","SignIn","d","LoginData","subscribe","x","user","emailVerified","getProfileByUid","uid","message","SignUp","logout","reset","doGoogleLogin","res","getProfileFromUid","data","seprate","navigate","selector","templateUrl","styleUrls","ResetpasswordComponent","auth","sendPasswordResetEmail","showerrorForResetMail","ACrudService","http","ucrud","afs","toastr","postdata","d1","d2","d3","d4","OthersUid","pu","pr","all","all3","username","PostDataForLikeCount","PostDataForLikedByUser","setTimeout","Post","sort","a","b","created_date","getUid","ProfieData","uname","trim","desc","name","currentDate","imgurl","downloadURL","isProfileSet","createPublicProfile","post","responseData","showSuccessCreateProfile","get","title","nameToSearch","toLowerCase","category","subcategory","privacy","showSuccess","err","y","x1","x3","key","hasOwnProperty","push","pipe","postsArray","posts","next","combine","concat","formvalue","Comare_In_FireStore","c","pb","Edit_Public_Post","EditInFireStore","Create_Private_Post","deletePublicPost","deleteFromFireStore","getpr","Edit_Private_Post","Create_Public_Post","deletePrivatePost","CreateInFireStore","querySnapshot","firestorekey","collection","doc","update","add","r","db_key","patch","url","post_id","showSuccessEdit","snapshotChanges","actions","map","payload","console","log","oldvalue","imgdownloadurl","editedProfileData","newuname","getProfileKey","c2","getPublicProfileKey","showSuccessEditProfile","likecount","likestatus","postuserid","likedata","count","userdata","islike","postid","getPostId","userlikedetailkey","allusrid","found","some","el","put","dbkey","currentUserId","post_userid","commentData","comment","commentOn","commentByUserId","getCommentKey","getCommentDataFromKey","z","i","featured","featuredPost","s","featuredPostsorted","success","timeOut","warning","providedIn","AuthGuard","route","state","isLoggedIn1","queryParams","returnUrl","AuthService","afAuth","ngZone","isAuthenticated","api","firebaseConfig","apiKey","authState","userData","localStorage","setItem","JSON","stringify","parse","getItem","returnSecureToken","handleError","resData","handleAuthentication","localId","idToken","expiresIn","reject","provider","GoogleAuthProvider","addScope","signInWithPopup","refreshToken","loadedUser","_token","Date","_tokenExpirationDate","token","expirationDuration","getTime","autoLogout","signOut","removeItem","tokenExpirationTimer","clearTimeout","userId","expirationDate","errorRes","errorMessage","currentUser","sendEmailVerification","passwordResetEmail","createUserWithEmailAndPassword","result","SendVerificationMail","showError","signInWithEmailAndPassword","SetUserData","displayName","photoURL","user1","info","NoSanitizePipe","domSanitizer","html","bypassSecurityTrustHtml","User","Profile","VerifyMailComponent","OnClick","HomeComponent","cd","isFetching","commenData","getAllPost","getFeaturedPost","sortDesecending","sorted","index","get_public_post","CrudService","afStorage","downloadurlchange","ErrorEvent","status","window","alert","selectedFile","file","filepath","filePath","fileRef","ref","task","upload","uploadPercent","percentageChanges","getDownloadURL","toPromise","UCreatePostComponent","firebaseService","fb","values","selected","isloggedin","validation_messages","type","event","isimgloading","target","files","split","getdata","reader","FileReader","onload","imageSrc","readAsDataURL","uploadFile","userSub","profile","isprofileset","showWarningForProfileSet","createForm","getUidandUname","isloading","getProfile","sendUidandUname","exampleForm","group","required","minLength","createUser","createPost","unsubscribe","UPostDetailComponent","isAll","isPublic","isPrivate","isUnauth","isImgLoaded","showComment","href","xyz","params","postype","getAuthAllPost","getDemo2","getAuthPublicPost","getDemo1","getAuthPrivatePost","profileuname","getPostFromProfile","getLikeCountandStatus","CallCommentForm","likeStatus","getPublicProfile","getPublicPostsFromProfileId","ProfileImgUrl","profileid","isPublicPostOfSingleUser","sortDesecendingByDate","publicpostOfSingleUser","posttitle","postdesc","getComment","getPostDetailForLike","unauthpost","postDate","unauthpostss","undefined","CommentKeyPromise","toDate","errorkey","Comment_Data","puSub","public_post","getAllData","x2","x4","x5","allPost","prSub","private_post","SinglePost","CreateLikeEntry","CommentForm","CreateComment","location","reload","passParams","deletPostEvent","showSuccessDelete","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","scrollPositionRestoration","useHash","imports","AppComponent","isprofileSet","allpostcount","ViewCV","myFunction","pageYOffset","sticky","header","classList","remove","onscroll","document","getElementById","offsetTop","autoLogin","isemailverfied","getAllPosts","length","AppModule","initializeApp","declarations","providers","bootstrap","LoadingSpinnerComponent","ProfileComponent","usernamParam","getProfileData","CreateProfile","checkProfileExist","profileReturned","SetProfileForm","profiled4eturned","ProfileForm","patchValue","erroUsername","validateUsername","UpdateProfile","createProfile","navigateByUrl","skipLocationChange","onSubmit","detectFiles","clearError","checkUsername","UserEditComponent","posttype","getPublicPosts","getPriavtePosts","EditForm","setFormValue","getPublicPost","getPrivatePost","UserPostComponent","authservice","selectedIndex","isLoading$","count_all","count_pr","count_pb","allpost","ViewOnlyPublicPostComponent","pbcount","prcount","allcount","urlpart","unameParam","getUidFromService","getPrivatePstsFromProfileId","getPrivateFromProfileId","PublicPosts","ViewProfileComponent","ismyself","myuname","getPrfoileFromPersonalDb","getPrfoileFromPublicDb","ProfileData","getPrivatePostsFromProfileId","environment","production","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService, AuthResponseData } from '../shared/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ACrudService } from '../shared/acrud.service';\r\n\r\n@Component({\r\n  selector: 'app-auth-component',\r\n  templateUrl: './auth-component.component.html',\r\n  styleUrls: ['./auth-component.component.css']\r\n})\r\nexport class AuthComponentComponent implements OnInit {\r\n  isLoginMode = true;\r\n  isLoading = false;\r\n  error: string = null;\r\n  isPorfileset: boolean = false;\r\n  constructor(private authService: AuthService,\r\n    private acrud: ACrudService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSwitchMode() {\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (!form.valid) {\r\n      return;\r\n    }\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n    this.isLoading = true;\r\n    if (this.isLoginMode) {\r\n\r\n\r\n      this.authService.SignIn(email, password)\r\n        .then(d => {\r\n          this.isLoading = false\r\n          this.authService.LoginData.subscribe(x => {\r\n\r\n            if (x.user.emailVerified) {\r\n              this.getProfileByUid(x.user.uid)\r\n            }\r\n          })\r\n\r\n        })\r\n        .catch(e => {\r\n          this.isLoading = false\r\n          this.error = e.message\r\n        })\r\n\r\n    } else {\r\n\r\n      this.authService.SignUp(email, password).then(d => {\r\n\r\n        this.isLoading = false\r\n        this.authService.logout()\r\n      })\r\n        .catch(e => {\r\n          this.authService.logout()\r\n          this.isLoading = false\r\n          this.error = e\r\n        })\r\n\r\n    }\r\n\r\n\r\n    form.reset();\r\n  }\r\n\r\n\r\n  tryGoogleLogin() {\r\n    this.isLoading = true\r\n    this.authService.doGoogleLogin()\r\n      .then(res => {\r\n\r\n        this.isLoading = false\r\n        this.getProfileByUid(res.uid)\r\n\r\n      })\r\n  }\r\n\r\n\r\n  getProfileByUid(uid) {\r\n\r\n    this.acrud.getProfileFromUid(uid).subscribe(data => {\r\n\r\n\r\n\r\n\r\n      let x = this.acrud.seprate(data)\r\n      this.isPorfileset = x[0];\r\n\r\n      this.isLoading = false\r\n\r\n      if (this.isPorfileset) {\r\n        this.router.navigate(['']);\r\n      }\r\n      else {\r\n\r\n        this.router.navigate(['myprofile'])\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\r\n        <div class=\"alert alert-danger\" *ngIf=\"error\">\r\n            <p>{{ error }}</p>\r\n        </div>\r\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">E-Mail</label>\r\n\r\n                <input type=\"email\" id=\"email\" class=\"form-control\" ngModel name=\"email\" required email />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" class=\"form-control\" ngModel name=\"password\" required minlength=\"6\" />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!authForm.valid\">\r\n                    {{ isLoginMode ? 'Login' : 'Sign Up' }}\r\n                </button> |\r\n                <button class=\"btn btn-primary\" (click)=\"onSwitchMode()\" type=\"button\">\r\n                    Switch to {{ isLoginMode ? 'Sign Up' : 'Login' }}\r\n                </button>\r\n\r\n                <a [routerLink]=\"['/reset-password']\" class=\"btn btn-link\">Forget Password</a>\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-block\" (click)=\"tryGoogleLogin()\">\r\n                    <i class=\"fa fa-google\" aria-hidden=\"true\"></i>\r\n                    Login with Google\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../shared/auth.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-resetpassword',\r\n  templateUrl: './resetpassword.component.html',\r\n  styleUrls: ['./resetpassword.component.css']\r\n})\r\nexport class ResetpasswordComponent implements OnInit {\r\n\r\n  isLoading: Boolean = false\r\n  error: string = \"\"\r\n  constructor(private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.isLoading = true\r\n    if (!form.valid) {\r\n      return;\r\n    }\r\n    const email = form.value.email;\r\n    this.auth.sendPasswordResetEmail(email).then(() => {\r\n\r\n      this.isLoading = false\r\n    })\r\n      .catch(e => {\r\n        this.isLoading = false\r\n        this.error = e.message\r\n        this.auth.showerrorForResetMail()\r\n\r\n      })\r\n\r\n  }\r\n} \r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\r\n        <div class=\"alert alert-danger\" *ngIf=\"error\">\r\n            <p>{{ error }}</p>\r\n        </div>\r\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">E-Mail</label>\r\n\r\n                <input type=\"email\" id=\"email\" class=\"form-control\" ngModel name=\"email\" required email />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!authForm.valid\">\r\n                    Reset Password\r\n                </button>\r\n                <a [routerLink]=\"['/auth']\" class=\"btn btn-link\">Login Page</a>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { UPost, LikeUser, LikeUserDetail } from 'src/app/Unauthenticated/shared/UPost.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { CrudService } from 'src/app/Unauthenticated/shared/crud.service';\r\nimport { Subscription, Observable, BehaviorSubject, forkJoin, zip } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\r\nimport { Router } from '@angular/router';\r\nimport { Profile, User1 } from './user.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ACrudService {\r\n\r\n\r\n  postdata = {}\r\n  uid: string\r\n\r\n  d1 = []\r\n  d2 = []\r\n  d3 = []\r\n  d4 = []\r\n\r\n  url: string\r\n  post_id\r\n\r\n  list: any\r\n  OthersUid = new BehaviorSubject<string>(null);\r\n  pu = new BehaviorSubject<any>(null);\r\n  pr = new BehaviorSubject<any>('');\r\n  all = new BehaviorSubject<any>(this.d3);\r\n  all3 = new BehaviorSubject<any>(this.d3);\r\n  username = new BehaviorSubject<string>(\"\");\r\n  PostDataForLikeCount = new BehaviorSubject<number>(null);\r\n  PostDataForLikedByUser = new BehaviorSubject<any>(null);\r\n  db_key: string;\r\n  firestorekey: string;\r\n  x: Observable<{ title: string; desc: string; created_date?: Date; imgurl: string; category: string; subcategory?: string; name: string; privacy: string; id: string; }[]>;\r\n  ProfieData: { id: string; uname: string; desc: string; email: string; name: string; created_date?: Date; imgurl: Observable<string>; isProfileSet: boolean };\r\n  editedProfileData: { id: string; uname: string; desc: string; email: string; name: string; imgurl: Observable<string>; created_date?: Date; isProfileSet: boolean; };\r\n  uname: any;\r\n  id: any;\r\n  commentData: { comment: string; commentOn: Date; commentByUserId: string; };\r\n  acrud: any;\r\n  featuredPost: any;\r\n  featuredPostsorted: any[];\r\n\r\n\r\n\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n\r\n    private ucrud: CrudService,\r\n    private authService: AuthService,\r\n    private afs: AngularFirestore,\r\n    private router: Router,\r\n    private toastr: ToastrService) {\r\n\r\n\r\n    setTimeout(() => {\r\n      this.authService.user.subscribe(data => {\r\n\r\n        if (data) {\r\n          this.uid = data.id\r\n        }\r\n\r\n\r\n      }\r\n\r\n      )\r\n    }, 2000)\r\n\r\n\r\n\r\n  }\r\n  getUid() {\r\n    return new Promise(res => {\r\n      this.authService.user.subscribe((user) => {\r\n        if (user) {\r\n          this.uid = user.uid\r\n        }\r\n        res(this.uid)\r\n      })\r\n\r\n    })\r\n  }\r\n  sortDesecending(Post) {\r\n\r\n\r\n    Post.sort((a: any, b: any) =>\r\n      b.created_date - a.created_date\r\n    )\r\n\r\n\r\n    return Post\r\n  }\r\n\r\n\r\n  createProfile(value: Profile) {\r\n    this.getUid()\r\n    this.ProfieData = {\r\n      id: this.uid,\r\n      uname: value.uname.trim(),\r\n      desc: value.desc,\r\n      email: value.email,\r\n      name: value.name,\r\n      created_date: this.ucrud.currentDate,\r\n      imgurl: this.ucrud.downloadURL,\r\n      isProfileSet: true\r\n\r\n    }\r\n    this.createPublicProfile(this.ProfieData, this.ProfieData.uname.trim())\r\n    this.getUid().then(d => {\r\n\r\n\r\n      this.http.post(\r\n        `https://fir-2f842.firebaseio.com/post/${this.uid}/profile.json`,\r\n        this.ProfieData\r\n      )\r\n\r\n        .subscribe(responseData => {\r\n\r\n          this.showSuccessCreateProfile()\r\n        });\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  createPublicProfile(postdata: any, uname) {\r\n\r\n    this.http.post(\r\n      `https://fir-2f842.firebaseio.com/PublicProfile/${uname}.json`,\r\n      postdata\r\n    )\r\n\r\n      .subscribe(responseData => {\r\n\r\n\r\n      });\r\n\r\n  }\r\n\r\n  getProfile(): Observable<Profile[]> {\r\n\r\n    this.getUid()\r\n    if (this.uid) {\r\n\r\n\r\n      return this.http.get<Profile[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/profile.json`)\r\n    }\r\n    else {\r\n      this.getUid().then((d: any) => {\r\n\r\n        this.uid = d\r\n        return this.http.get<Profile[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/profile.json`)\r\n      })\r\n    }\r\n\r\n  }\r\n  createPost(value: UPost) {\r\n    this.postdata = {\r\n      title: value.title,\r\n      nameToSearch: value.title.toLowerCase(),\r\n      desc: value.desc,\r\n      category: value.category,\r\n      subcategory: value.subcategory,\r\n      name: value.name,\r\n      created_date: this.ucrud.currentDate,\r\n      imgurl: this.ucrud.downloadURL,\r\n      privacy: value.privacy,\r\n      uid: this.id,\r\n      uname: this.uname.trim(),\r\n\r\n    }\r\n    if (value.privacy == \"true\") {\r\n      this.getUid().then((d: any) => {\r\n        this.uid = d\r\n        this.http.post(\r\n          `https://fir-2f842.firebaseio.com/post/${this.uid}/public.json`,\r\n          this.postdata\r\n        )\r\n          .subscribe(responseData => {\r\n\r\n            this.router.navigate(['']);\r\n            this.showSuccess();\r\n          }\r\n            , err => {\r\n\r\n            })\r\n          ;\r\n      })\r\n\r\n\r\n    }\r\n    else {\r\n\r\n      this.http.post(\r\n        `https://fir-2f842.firebaseio.com/post//${this.uid}/private.json`,\r\n        this.postdata\r\n      )\r\n        .subscribe(responseData => {\r\n\r\n          this.router.navigate(['']);\r\n        });\r\n    }\r\n  }\r\n  getPublicPost(): Observable<UPost[]> {\r\n    return this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/public.json`)\r\n\r\n  }\r\n\r\n  getPrivatePost(): Observable<UPost[]> {\r\n    return this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/private.json`)\r\n\r\n  }\r\n\r\n  getAllData() {\r\n    this.getUid()\r\n    let x = this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/public.json`)\r\n    let y = this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/private.json`)\r\n    return forkJoin(x, y)\r\n  }\r\n  seprate(x1) {\r\n    let x3 = []\r\n    for (const key in x1) {\r\n\r\n      if (x1.hasOwnProperty(key)) {\r\n        x3.push({ ...x1[key] });\r\n      }\r\n    }\r\n    return x3\r\n\r\n  }\r\n\r\n  getDemo1() {\r\n    this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/private.json`)\r\n      .pipe(\r\n        map(responseData => {\r\n          const postsArray: UPost[] = [];\r\n          for (const key in responseData) {\r\n\r\n            if (responseData.hasOwnProperty(key)) {\r\n              postsArray.push({ ...responseData[key] });\r\n            }\r\n          }\r\n          return postsArray;\r\n        })\r\n      )\r\n      .subscribe(posts => {\r\n        this.d1 = posts\r\n\r\n        this.pr.next(posts)\r\n        this.combine()\r\n\r\n        return this.d1;\r\n      });\r\n  }\r\n\r\n  getDemo2() {\r\n    this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/public.json`)\r\n      .pipe(\r\n        map(responseData => {\r\n          const postsArray: UPost[] = [];\r\n          for (const key in responseData) {\r\n\r\n            if (responseData.hasOwnProperty(key)) {\r\n              postsArray.push({ ...responseData[key] });\r\n            }\r\n          }\r\n          return postsArray;\r\n        })\r\n      )\r\n      .subscribe(posts => {\r\n        this.pu.next(posts)\r\n        this.d2 = posts\r\n\r\n        this.combine()\r\n\r\n        return this.d2;\r\n      });\r\n  }\r\n\r\n  combine() {\r\n    this.d3 = this.d2.concat(this.d1)\r\n    this.all.next(this.d3)\r\n  }\r\n\r\n\r\n  update(id, value, formvalue, imgurl) {\r\n\r\n\r\n    this.postdata = {\r\n      title: formvalue.title,\r\n      nameToSearch: formvalue.title.toLowerCase(),\r\n      desc: formvalue.desc,\r\n      category: formvalue.category,\r\n      subcategory: formvalue.subcategory,\r\n      name: formvalue.name,\r\n      imgurl: imgurl,\r\n      privacy: formvalue.privacy,\r\n      created_date: this.ucrud.currentDate,\r\n      uid: value.uid,\r\n      uname: value.uname.trim()\r\n\r\n    }\r\n\r\n    this.Comare_In_FireStore(value, formvalue)\r\n\r\n    if (value.privacy == \"true\") {\r\n      if (formvalue.privacy == \"true\") {\r\n\r\n        let c = this.pb(id, value)\r\n        this.Edit_Public_Post(this.postdata, c)\r\n        this.EditInFireStore(this.postdata, value)\r\n\r\n      }\r\n      else {\r\n\r\n        this.Create_Private_Post(this.postdata)\r\n        let c = this.pb(id, value)\r\n        this.deletePublicPost(this.postdata, c)\r\n        this.deleteFromFireStore(value)\r\n\r\n      }\r\n    }\r\n    else {\r\n      if (formvalue.privacy == \"false\") {\r\n        let c = this.getpr(value)\r\n        this.Edit_Private_Post(this.postdata, c)\r\n      }\r\n      else {\r\n        this.Create_Public_Post(this.postdata)\r\n        let c = this.getpr(value)\r\n        this.deletePrivatePost(this.postdata, c)\r\n        this.CreateInFireStore(this.postdata)\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  EditInFireStore(postdata: {}, value) {\r\n\r\n    this.x.subscribe((querySnapshot) => {\r\n\r\n      for (const key in querySnapshot) {\r\n\r\n        if (querySnapshot[key].title == value.title && querySnapshot[key].name == value.name) {\r\n          this.firestorekey = querySnapshot[key].id\r\n          this.afs.collection(\"normal-users\").doc(this.firestorekey).update(postdata)\r\n        }\r\n\r\n      }\r\n\r\n\r\n    });\r\n\r\n  }\r\n  CreateInFireStore(postdata: {}) {\r\n    this.afs.collection(\"normal-users\").add(postdata).then(\r\n      r => {\r\n\r\n      }).catch(e => {\r\n      })\r\n\r\n  }\r\n\r\n\r\n  deleteFromFireStore(value) {\r\n    this.x.subscribe((querySnapshot) => {\r\n\r\n      for (const key in querySnapshot) {\r\n\r\n        if (querySnapshot[key].title == value.title && querySnapshot[key].name == value.name) {\r\n          this.firestorekey = querySnapshot[key].id\r\n          this.afs.collection(\"normal-users\").doc(this.firestorekey).delete()\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  deletePublicPost(postdata: {}, c: Observable<void>) {\r\n    c.subscribe(x => {\r\n      this.http.delete(\r\n        `https://fir-2f842.firebaseio.com/post/${this.uid}/public/${this.db_key}.json`)\r\n        .subscribe(d => {\r\n          this.router.navigate(['myposts']);\r\n        })\r\n    })\r\n  }\r\n\r\n  deletePrivatePost(postdata: {}, c: Observable<void>) {\r\n    c.subscribe(x => {\r\n      this.http.delete(\r\n        `https://fir-2f842.firebaseio.com/post/${this.uid}/private/${this.db_key}.json`)\r\n        .subscribe(d => {\r\n\r\n          this.router.navigate(['myposts']);\r\n        })\r\n    })\r\n  }\r\n\r\n  Edit_Private_Post(postdata: {}, c) {\r\n    c.subscribe(x => {\r\n      this.http.patch(\r\n        `https://fir-2f842.firebaseio.com/post/${this.uid}/private/${this.db_key}.json`, postdata)\r\n        .subscribe(d => {\r\n          this.router.navigate([`myposts/${this.url}/${this.post_id}`]);\r\n          this.showSuccessEdit()\r\n        })\r\n    })\r\n  }\r\n  Edit_Public_Post(postdata: {}, c) {\r\n    c.subscribe(x => {\r\n      this.http.patch(\r\n        `https://fir-2f842.firebaseio.com/post/${this.uid}/public/${this.db_key}.json`, postdata)\r\n        .subscribe(d => {\r\n          this.router.navigate([`myposts/${this.url}/${this.post_id}`]);\r\n          this.showSuccessEdit()\r\n        })\r\n    })\r\n\r\n  }\r\n  Create_Private_Post(postdata: {}) {\r\n    this.http.post(\r\n      `https://fir-2f842.firebaseio.com/post/${this.uid}/private.json`,\r\n      this.postdata\r\n    )\r\n      .subscribe(responseData => {\r\n\r\n\r\n      });\r\n  }\r\n\r\n  Create_Public_Post(postdata: {}) {\r\n    this.http.post(\r\n      `https://fir-2f842.firebaseio.com/post/${this.uid}/public.json`,\r\n      postdata\r\n    )\r\n      .subscribe(responseData => {\r\n\r\n      });\r\n  }\r\n\r\n  Comare_In_FireStore(value, formvalue) {\r\n    this.x = this.afs.collection(\"normal-users\").snapshotChanges().pipe(map(actions => {\r\n      return actions.map(a => {\r\n        const data = a.payload.doc.data() as {};\r\n        const id = a.payload.doc.id;\r\n        return { id, ...data as UPost };\r\n      });\r\n    }))\r\n  }\r\n\r\n  pb(id, value) {\r\n    return this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/public.json`)\r\n      .pipe(\r\n        map(responseData => {\r\n\r\n          for (const key in responseData) {\r\n            if (responseData[key].title == value.title) {\r\n              this.db_key = key\r\n\r\n            }\r\n            else {\r\n              console.log(\"no data  \")\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      )\r\n  }\r\n\r\n  getpr(value) {\r\n    return this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/private.json`)\r\n      .pipe(\r\n        map(responseData => {\r\n\r\n          for (const key in responseData) {\r\n            if (responseData[key].title == value.title) {\r\n              this.db_key = key\r\n\r\n            }\r\n            else {\r\n              console.log(\"no data  \")\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      )\r\n  }\r\n\r\n  passParams(url: string, id: number) {\r\n    this.url = url;\r\n    this.post_id = id;\r\n  }\r\n  UpdateProfile(value, oldvalue, imgdownloadurl) {\r\n    this.editedProfileData = {\r\n      id: oldvalue.id,\r\n      uname: value.uname.trim(),\r\n      desc: value.desc,\r\n      email: value.email,\r\n      name: value.name,\r\n      imgurl: imgdownloadurl,\r\n      isProfileSet: true,\r\n      created_date: oldvalue.created_date,\r\n    }\r\n\r\n    let uname = oldvalue.uname\r\n    let newuname = value.uname\r\n    console.log(imgdownloadurl)\r\n\r\n    let c = this.getProfileKey(value, oldvalue.uname)\r\n\r\n    let c2 = this.getPublicProfileKey(value, oldvalue.uname)\r\n    c.subscribe(d => {\r\n\r\n      this.http.delete(\r\n        `https://fir-2f842.firebaseio.com/PublicProfile/${uname}.json`\r\n      )\r\n\r\n        .subscribe(responseData => {\r\n\r\n        });\r\n\r\n      this.createPublicProfile(this.editedProfileData, newuname)\r\n      this.http.patch(\r\n        `https://fir-2f842.firebaseio.com/post/${this.uid}/profile/${this.db_key}.json`,\r\n        this.editedProfileData\r\n      )\r\n        .subscribe(responseData => {\r\n\r\n          this.username.next(newuname)\r\n          this.router.navigate(['/myprofile', newuname]);\r\n          this.showSuccessEditProfile()\r\n        });\r\n\r\n\r\n    })\r\n\r\n  }\r\n  getPublicProfileKey(value: any, uname: any) {\r\n\r\n    return this.http.get<Profile[]>(`https://fir-2f842.firebaseio.com/PublicProfile/${uname}.json`)\r\n      .pipe(\r\n        map(responseData => {\r\n\r\n          for (const key in responseData) {\r\n            if (responseData[key].uname == uname) {\r\n              this.db_key = key\r\n            }\r\n            else {\r\n              console.log(\"no data  \")\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      )\r\n  }\r\n\r\n  getProfileKey(value: any, uname: any) {\r\n    return this.http.get<Profile[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/profile.json`)\r\n      .pipe(\r\n        map(responseData => {\r\n\r\n          for (const key in responseData) {\r\n            if (responseData[key].uname == uname) {\r\n              this.db_key = key\r\n\r\n\r\n\r\n            }\r\n            else {\r\n              console.log(\"no data  \")\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n\r\n  getPublicProfile(uname): Observable<Profile[]> {\r\n\r\n    return this.http.get<Profile[]>(`https://fir-2f842.firebaseio.com/PublicProfile/${uname}.json`)\r\n  }\r\n\r\n  getProfileFromUid(uid): Observable<UPost[]> {\r\n\r\n    return this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${uid}/profile.json`)\r\n  }\r\n\r\n  getPublicPostsFromProfileId(uid): Observable<UPost[]> {\r\n    this.uid = uid\r\n    return this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/public.json`)\r\n  }\r\n\r\n  getPrivateFromProfileId(uid): Observable<UPost[]> {\r\n    this.uid = uid\r\n    return this.http.get<UPost[]>(`https://fir-2f842.firebaseio.com/post/${this.uid}/private.json`)\r\n  }\r\n\r\n\r\n  sendUidandUname(uname, id) {\r\n    this.uname = uname.trim()\r\n    this.id = id\r\n  }\r\n\r\n  CreateLikeEntry(likecount, likestatus, postuserid, title, desc) {\r\n    this.getUid()\r\n    let likedata: LikeUser = {\r\n      count: likecount\r\n    }\r\n\r\n    let userdata = {\r\n\r\n      islike: likestatus,\r\n      uid: this.uid,\r\n    }\r\n\r\n    let postid\r\n    let x = this.getPostId(postuserid, title, desc)\r\n    x.subscribe(post => {\r\n\r\n\r\n      for (const key in post) {\r\n        if ((post[key].title == title) && (post[key].desc == desc)) {\r\n          postid = key\r\n\r\n        }\r\n      }\r\n\r\n      this.http.patch(\r\n        `https://fir-2f842.firebaseio.com/post/${postuserid}/public/${postid}/likestatus.json`,\r\n        likedata)\r\n\r\n        .subscribe(responseData => {\r\n        });\r\n\r\n      this.PostDataForLikedByUser.subscribe(d => {\r\n        let userlikedetailkey\r\n        let allusrid = []\r\n        //\r\n        for (const key in d) {\r\n          if (d[key].uid == this.uid) {\r\n            userlikedetailkey = key\r\n            allusrid = allusrid.concat(d[key].uid)\r\n          }\r\n        }\r\n        const found = allusrid.some(el => el === this.uid);\r\n        if (found) {\r\n          this.http.put(\r\n            `https://fir-2f842.firebaseio.com/post/${postuserid}/public/${postid}/likestatus/uid/${userlikedetailkey}.json`,\r\n            userdata\r\n          ).subscribe(d => {\r\n\r\n          })\r\n        }\r\n\r\n        if (!found) {\r\n          this.http.post(\r\n            `https://fir-2f842.firebaseio.com/post/${postuserid}/public/${postid}/likestatus/uid.json`,\r\n            userdata\r\n          ).subscribe(d => {\r\n\r\n          })\r\n        }\r\n        let x = this.seprate(d)\r\n\r\n      })\r\n\r\n\r\n    })\r\n  }\r\n\r\n  getLike(postuserid, title, desc) {\r\n    let dbkey\r\n    this.http.get(\r\n      `https://fir-2f842.firebaseio.com/post/${postuserid}/public.json`)\r\n      .subscribe(post => {\r\n        for (const key in post) {\r\n          if ((post[key].title == title) && (post[key].desc == desc)) {\r\n            dbkey = key\r\n          }\r\n        }\r\n\r\n        return this.http.get(\r\n          `https://fir-2f842.firebaseio.com/post/${postuserid}/public/${dbkey}/likestatus.json`)\r\n      })\r\n  }\r\n\r\n  getPostId(postuserid, title, desc) {\r\n    return this.http.get(\r\n      `https://fir-2f842.firebaseio.com/post/${postuserid}/public.json`)\r\n  }\r\n\r\n  getPostDetailForLike(postid, title, desc) {\r\n\r\n    let x = this.getPostId(postid, title, desc)\r\n    let dbkey\r\n    x.subscribe(post => {\r\n\r\n\r\n      for (const key in post) {\r\n\r\n        if ((post[key].title == title) && (post[key].desc == desc)) {\r\n          dbkey = key\r\n\r\n        }\r\n      }\r\n      if (dbkey) {\r\n        this.http.get(`https://fir-2f842.firebaseio.com/post/${postid}/public/${dbkey}.json`)\r\n          .subscribe((data: any) => {\r\n\r\n            this.PostDataForLikeCount.next(data.likestatus?.count)\r\n            this.PostDataForLikedByUser.next(data.likestatus?.uid)\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  CreateComment(value, currentUserId, post_userid, title, desc) {\r\n    return new Promise(res => {\r\n\r\n\r\n      this.getUid()\r\n      this.uid = currentUserId\r\n\r\n      this.commentData = {\r\n        comment: value.comment,\r\n        commentOn: this.ucrud.currentDate,\r\n        commentByUserId: currentUserId\r\n      }\r\n      let dbkey\r\n      this.getCommentKey(post_userid, title, desc).\r\n        then(d => {\r\n          dbkey = d\r\n          this.http.post(`https://fir-2f842.firebaseio.com/post/${post_userid}/public/${dbkey}/commentData.json`, this.commentData)\r\n            .subscribe((data: any) => {\r\n              this.getCommentDataFromKey(post_userid, dbkey)\r\n              res(true)\r\n            })\r\n        })\r\n\r\n    })\r\n  }\r\n\r\n  getCommentDataFromKey(post_userid, dbkey) {\r\n    return this.http.get(`https://fir-2f842.firebaseio.com/post/${post_userid}/public/${dbkey}/commentData.json`)\r\n  }\r\n  getCommentKey(post_userid: any, title: any, desc: any) {\r\n    return new Promise(resolve => {\r\n\r\n      let x = this.getPostId(post_userid, title, desc)\r\n      let dbkey\r\n      x.subscribe(post => {\r\n\r\n        for (const key in post) {\r\n\r\n          if ((post[key].title == title) && (post[key].desc == desc)) {\r\n            dbkey = key\r\n          }\r\n        }\r\n\r\n        resolve(dbkey)\r\n\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  deletPostEvent(value, id): any {\r\n    return new Promise(res => {\r\n      if (value.privacy == \"true\") {\r\n\r\n        let c = this.pb(id, value)\r\n        this.Comare_In_FireStore(value, c)\r\n        this.deleteFromFireStore(value)\r\n        res(this.deletePublicPost(value, c))\r\n\r\n      }\r\n      if (value.privacy == \"false\") {\r\n        let c = this.getpr(value)\r\n        res(this.deletePrivatePost(value, c))\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  getFeaturedPost() {\r\n    return new Promise(resolve => {\r\n      this.http.get(`https://fir-2f842.firebaseio.com/post.json`).subscribe(d => {\r\n          let x = this.seprate(d)\r\n          let z = []\r\n          debugger;\r\n          for (let i in x) {\r\n            let featured = x[i].public\r\n            z = z.concat(this.seprate(featured))\r\n            this.featuredPost = z\r\n            let s = []\r\n            for (let a in this.featuredPost) {\r\n              if (this.featuredPost[a].likestatus?.count > 1) {\r\n                s = s.concat(this.featuredPost[a])\r\n                this.featuredPostsorted = s\r\n              }\r\n            }\r\n          }\r\n          resolve(this.featuredPostsorted)\r\n        })\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  getAllPost() {\r\n   // return this.db.list('post').valueChanges();\r\n    return new Promise(resolve => {\r\n      this.http.get('https://fir-2f842.firebaseio.com/post.json').subscribe(d => {\r\n          let x = this.seprate(d)\r\n          let z = []\r\n          for (let i in x) {\r\n            let featured = x[i].public\r\n            z = z.concat(this.seprate(featured))\r\n          }\r\n          resolve(z)\r\n        })\r\n    })\r\n  }\r\n\r\n\r\n  showSuccess() {\r\n    this.toastr.success('Post Added Successfully', 'Success', {\r\n      timeOut: 20000\r\n    });\r\n  }\r\n\r\n\r\n  showSuccessDelete() {\r\n    this.toastr.success('Post Deleted Successfully', 'Success', {\r\n      timeOut: 20000\r\n    });\r\n  }\r\n\r\n  showSuccessEdit() {\r\n    this.toastr.success('Post Edited Successfully', 'Success', {\r\n      timeOut: 20000\r\n    });\r\n  }\r\n\r\n  showSuccessCreateProfile() {\r\n    this.toastr.success('Profile Created Successfully', 'Success', {\r\n      timeOut: 20000\r\n    });\r\n  }\r\n  showSuccessEditProfile() {\r\n    this.toastr.success('Profile Edited Successfully', 'Success', {\r\n      timeOut: 20000\r\n    });\r\n  }\r\n\r\n  showWarningForProfileSet() {\r\n    this.toastr.warning('Please set your Profile', 'Warning', {\r\n      timeOut: 20000\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  CanActivateChild\r\n} from '@angular/router';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router,\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    if (this.authService.isLoggedIn1()) {\r\n\r\n      return true;\r\n    }\r\n    this.router.navigate([\"/auth\"], {\r\n      queryParams: { returnUrl: state.url }\r\n    });\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { throwError, Subject, BehaviorSubject } from 'rxjs';\r\nimport { User, User1 } from './user.model';\r\nimport { Router } from '@angular/router';\r\nimport * as firebase from 'firebase/app';\r\nimport { AngularFireAuth } from '@angular/fire/auth'\r\nimport { ToastrService } from 'ngx-toastr';\r\nexport interface AuthResponseData {\r\n  kind: string;\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  localId: string;\r\n  registered?: boolean;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  isAuthenticated = false;\r\n  api = environment.firebaseConfig.apiKey\r\n  user = new BehaviorSubject<User>(null);\r\n  private tokenExpirationTimer: any;\r\n  userdata = null\r\n  userData: any;\r\n  LoginData = new BehaviorSubject<any>(null);\r\n  constructor(private http: HttpClient,\r\n    public afAuth: AngularFireAuth,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    public ngZone: NgZone) {\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user'));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'));\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  signup(email: string, password: string) {\r\n    return this.http\r\n      .post<AuthResponseData>(\r\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + this.api,\r\n        {\r\n          email: email,\r\n          password: password,\r\n          returnSecureToken: true\r\n        }\r\n      )\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap(resData => {\r\n          this.handleAuthentication(\r\n            resData.email,\r\n            resData.localId,\r\n            resData.idToken,\r\n            +resData.expiresIn\r\n          );\r\n\r\n        })\r\n      );\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http\r\n      .post<AuthResponseData>(\r\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + this.api,\r\n        {\r\n          email: email,\r\n          password: password,\r\n          returnSecureToken: true\r\n        }\r\n      )\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap(resData => {\r\n          this.handleAuthentication(\r\n            resData.email,\r\n            resData.localId,\r\n            resData.idToken,\r\n            +resData.expiresIn\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  doGoogleLogin() {\r\n    return new Promise<any>((resolve, reject) => {\r\n      let provider = new firebase.auth.GoogleAuthProvider();\r\n      provider.addScope('profile');\r\n      provider.addScope('email');\r\n      this.afAuth.auth\r\n        .signInWithPopup(provider)\r\n        .then(res => {\r\n          this.handleAuthentication(\r\n            res.user.email,\r\n            res.user.uid,\r\n            res.user.refreshToken,\r\n            +360000\r\n          );\r\n\r\n          resolve(res);\r\n        }, err => {\r\n\r\n          reject(err);\r\n        })\r\n    })\r\n  }\r\n  autoLogin() {\r\n    const userData: {\r\n      email: string;\r\n      id: string;\r\n      _token: string;\r\n      _tokenExpirationDate: string;\r\n    } = JSON.parse(localStorage.getItem('userData'));\r\n    if (!userData) {\r\n      return;\r\n    }\r\n\r\n    const loadedUser = new User(\r\n      userData.email,\r\n      userData.id,\r\n      userData._token,\r\n      new Date(userData._tokenExpirationDate)\r\n    );\r\n\r\n    if (loadedUser.token) {\r\n      this.user.next(loadedUser);\r\n      const expirationDuration =\r\n        new Date(userData._tokenExpirationDate).getTime() -\r\n        new Date().getTime();\r\n      this.autoLogout(expirationDuration);\r\n    }\r\n\r\n  }\r\n\r\n  logout() {\r\n    return this.afAuth.auth.signOut().then(() => {\r\n      this.user.next(null);\r\n\r\n      localStorage.removeItem('userData');\r\n      if (this.tokenExpirationTimer) {\r\n        clearTimeout(this.tokenExpirationTimer);\r\n      }\r\n      this.tokenExpirationTimer = null;\r\n\r\n      this.router.navigate(['/auth']);\r\n    })\r\n\r\n  }\r\n\r\n  autoLogout(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expirationDuration);\r\n  }\r\n\r\n  private handleAuthentication(\r\n    email: string,\r\n    userId: string,\r\n    token: string,\r\n    expiresIn: number\r\n  ) {\r\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n    const user = new User(email, userId, token, expirationDate);\r\n    this.userdata = user\r\n    this.user.next(user);\r\n    this.autoLogout(expiresIn * 1000);\r\n    localStorage.setItem('userData', JSON.stringify(user));\r\n    this.isAuthenticated = true;\r\n\r\n  }\r\n\r\n  private handleError(errorRes: HttpErrorResponse) {\r\n    let errorMessage = 'An unknown error occurred!';\r\n    if (!errorRes.error || !errorRes.error.error) {\r\n      return throwError(errorMessage);\r\n    }\r\n    switch (errorRes.error.error.message) {\r\n      case 'EMAIL_EXISTS':\r\n        errorMessage = 'This email exists already';\r\n        break;\r\n      case 'EMAIL_NOT_FOUND':\r\n        errorMessage = 'This email does not exist.';\r\n        break;\r\n      case 'INVALID_PASSWORD':\r\n        errorMessage = 'This password is not correct.';\r\n        break;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n\r\n\r\n  isLoggedIn(): boolean {\r\n    this.user.subscribe(userdata => {\r\n      this.userdata = userdata\r\n    })\r\n    if (this.userdata !== null) {\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  sendEmailVerification() {\r\n    this.afAuth.auth.currentUser.sendEmailVerification()\r\n\r\n    this.router.navigate(['auth']);\r\n  }\r\n\r\n  async sendPasswordResetEmail(passwordResetEmail: string) {\r\n    return await this.afAuth.auth.sendPasswordResetEmail(passwordResetEmail)\r\n      .then(() => {\r\n        if (this.isAuthenticated) {\r\n          this.logout()\r\n        }\r\n        this.router.navigate(['auth']);\r\n        this.showSuccess();\r\n      })\r\n\r\n  }\r\n\r\n\r\n  SignUp(email, password) {\r\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n\r\n        this.logout()\r\n        this.SendVerificationMail(); // Sending email verification notification, when new user registers\r\n      })\r\n  }\r\n\r\n  SendVerificationMail() {\r\n    return this.afAuth.auth.currentUser.sendEmailVerification()\r\n      .then(() => {\r\n        this.showError()\r\n        this.router.navigate(['verify-mail']);\r\n\r\n\r\n\r\n      })\r\n      .catch(e => {\r\n        this.toastr.warning(e.message, 'Alert', {\r\n          timeOut: 5000\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n\r\n  SignIn(email, password) {\r\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        this.LoginData.next(result)\r\n\r\n\r\n        if (result.user.emailVerified !== true) {\r\n          this.SendVerificationMail();\r\n\r\n        }\r\n        else {\r\n          this.SetUserData(result.user);\r\n        }\r\n\r\n      })\r\n\r\n\r\n  }\r\n\r\n  isLoggedIn1() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    this.user.next(user)\r\n    return (user !== null && user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  SetUserData(user) {\r\n\r\n    const userData: User1 = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      emailVerified: user.emailVerified\r\n    }\r\n\r\n\r\n\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        const user1 = JSON.parse(localStorage.getItem('user'));\r\n\r\n        this.user.next(user1)\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'));\r\n      }\r\n    })\r\n\r\n  }\r\n  showSuccess() {\r\n    this.toastr.success('Password Link Sent', 'Please check your registered email', {\r\n      timeOut: 20000\r\n    });\r\n  }\r\n  showError() {\r\n    this.toastr.info('Email Verfication Link Sent.Verify Using the link', 'Please check your registered email', {\r\n      timeOut: 5000\r\n    });\r\n  }\r\n\r\n  showerrorForResetMail() {\r\n    this.toastr.error('Error while sending Reset Password Link', 'Error ', {\r\n      timeOut: 5000\r\n    });\r\n  }\r\n}\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n@Pipe({\r\n  name: 'noSanitize'\r\n})\r\nexport class NoSanitizePipe implements PipeTransform {\r\n  constructor(private domSanitizer: DomSanitizer) {}\r\n  transform(html: string): SafeHtml {\r\n    return this.domSanitizer.bypassSecurityTrustHtml(html);\r\n }\r\n\r\n}\r\n","export class User {\r\n  uid: string;\r\n  constructor(\r\n    public email: string,\r\n    public id: string,\r\n    private _token: string,\r\n    private _tokenExpirationDate: Date\r\n  ) { }\r\n\r\n  get token() {\r\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n}\r\n\r\nexport class Profile {\r\n\r\n  desc: string;\r\n  email: string;\r\n  imgurl: string;\r\n  name: string;\r\n  uname: string;\r\n  isProfileSet?: boolean\r\n}\r\n\r\n\r\nexport interface User1 {\r\n  uid: string;\r\n  email: string;\r\n  displayName: string;\r\n  photoURL: string;\r\n  emailVerified: boolean;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../shared/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-verify-mail',\r\n  templateUrl: './verify-mail.component.html',\r\n  styleUrls: ['./verify-mail.component.css']\r\n})\r\nexport class VerifyMailComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n  OnClick() {\r\n    this.authService.logout()\r\n  }\r\n\r\n}\r\n","<div class=\"displayTable\">\r\n    <div class=\"displayTableCell\">\r\n\r\n\r\n\r\n        <div class=\"authBlock\">\r\n            <h3 class=\"text-center\">Thank You for Registering</h3>\r\n\r\n            <div class=\"formGroup text-info part2\" *ngIf=\"authService.userData as user\">\r\n                <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\r\n                <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"formGroup text-center text-info\">\r\n                <h4 class=\"text-center\">After verfying kidnly try to login again</h4>\r\n                <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\r\n                    <i class=\"fas fa-redo-alt\"></i>\r\n                    Resend Verification Email\r\n                </button>\r\n                <div class=\"redirectToLogin text-info\">\r\n                    <a>\r\n                        <span>Go back to?<span class=\"redirect\" (click)=\"OnClick()\"> Sign in</span></span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UPost } from '../shared/UPost.model';\r\nimport { CrudService } from '../shared/crud.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ACrudService } from '../../Authentication/shared/acrud.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  data: UPost[];\r\n  sorted: UPost[];\r\n  featuredPost: any\r\n  isFetching: boolean = false\r\n  error: string\r\n  searchText\r\n  featuredPostsorted: any[];\r\n  commenData: any = []\r\n  constructor(private cd: CrudService,\r\n    private acrud: ACrudService,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPost()\r\n    this.getFeaturedPost()\r\n  }\r\n\r\n  getAllPost() {\r\n    this.isFetching = true;\r\n    this.acrud.getAllPost().then((x: any) => {\r\n      this.isFetching = false\r\n      this.data = x\r\n      debugger\r\n      this.sortDesecending(this.data)\r\n\r\n    })\r\n  }\r\n  sortDesecending(data) {\r\n    this.sorted = data.sort((a: any, b: any) =>\r\n      <any>new Date(b.created_date) - <any>new Date(a.created_date)\r\n    )\r\n  }\r\n  onReadMore(index) {\r\n\r\n  }\r\n\r\n  getFeaturedPost() {\r\n    this.acrud.getFeaturedPost().then(x => {\r\n      let c = 0\r\n      this.featuredPost = x\r\n      for (let i in this.featuredPost) {\r\n        debugger;\r\n        let y = this.acrud.seprate(this.featuredPost[i].commentData)\r\n        this.commenData.push(y)\r\n      }\r\n    },\r\n      err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  public_data() {\r\n    this.isFetching = true;\r\n    this.cd.get_public_post()\r\n      .subscribe(result => {\r\n        debugger;\r\n        this.data = result.map(e => {\r\n          return {\r\n            ...e.payload.doc.data() as {}\r\n          } as UPost\r\n\r\n        })\r\n        this.isFetching = false;\r\n      },\r\n        err => {\r\n          this.isFetching = false;\r\n          this.error = err\r\n\r\n        })\r\n    catchError(error => {\r\n      throw new Error('Error: Getting document:' + error); // throw an Error\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-xs-12 col-md-push-7\">\r\n\r\n            <div class=\"search-hero search-input-wrapper fadeInUp hidden-md hidden-lg\">\r\n                <label for=\"search\"></label>\r\n                <input class=\"form-control\" type=\"text\" name=\"search\" id=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"   Search by Title or Author name\">\r\n                <div class=\"search-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                        <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                        <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                    </svg></div>\r\n            </div>\r\n\r\n            <div *ngIf=\"(featuredPost  | filter:searchText ) as result\">\r\n                <h3 class=\"Featured\">Most-liked Posts</h3>\r\n                <div *ngIf=\"!isFetching && result?.length>0\">\r\n                    <div class=\"card row card-featured\" *ngFor=\"let i of result ;let c= index \">\r\n                        <a [routerLink]=\"['/featured',c]\">\r\n                            <div class=\"img img-col\">\r\n                                <img src=\"{{i.imgurl}} \" style=\"width:100%\" class=\"img-responsive\" alt=\"\">\r\n                            </div>\r\n                            <div class=\"title main-content\">\r\n                                <h3 class=\"title\">{{ i.title}}</h3>\r\n                                <!--   <p> {{i.desc}}</p> -->\r\n                                <p [innerHTML]=\"i.desc | noSanitize\"></p>\r\n\r\n                                <div class=\"author-date\">\r\n                                    <p class=\"author-name\">By {{i.name}}</p>\r\n                                    <p class=\"date\">On {{i.created_date | date:'mediumDate' }}</p>\r\n                                </div>\r\n\r\n                                <div class=\"likecomment\">\r\n                                    <i style=\"font-size:21px\" class=\"fa fa-heart\"><span>{{i.likestatus.count}}</span></i>\r\n                                    <i style='font-size:21px' class='fa fa-comment-o'>{{commenData[c].length}}</i>\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-left no-result\">\r\n                    <h4 *ngIf=\"result.length === 0\">No Results Found</h4>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12 col-xs-12 col-md-pull-5\">\r\n            <div class=\"search-hero search-input-wrapper fadeInUp hidden-xs hidden-sm\">\r\n                <label for=\"search1\"></label>\r\n                <input class=\"form-control\" type=\"text\" id=\"search1\" name=\"search1\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"   Search by Title or Author name\">\r\n                <div class=\"search-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                        <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                        <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                    </svg></div>\r\n            </div>\r\n            <div *ngIf=\"(sorted | filter:searchText) as result \">\r\n                <h3 class=\"Featured hidden-md hidden-lg\">Latest Posts</h3>\r\n                <div *ngIf=\"!isFetching && result?.length>0\">\r\n                    <div class=\"card row\" *ngFor=\"let i of result;let c= index \">\r\n                        <a [routerLink]=\"[c]\">\r\n\r\n                            <div class=\"col-md-4 col-xs-12 img-col col-md-push-8\">\r\n                                <img src=\"{{ i.imgurl }} \" alt=\"Avatar \" style=\"width: 100%;\" class=\"img-responsive\" alt=\"img\" />\r\n                            </div>\r\n                            <div class=\"col-md-8 col-xs-12 main-content col-md-pull-4\">\r\n                                <h2 class=\"title\">\r\n                                    {{ i.title }}\r\n                                </h2>\r\n\r\n                                <p class=\"desc desc1\" [innerHTML]=\"i.desc| noSanitize\"></p>\r\n                            </div>\r\n                            <div class=\"author-date col-md-6 col-xs-12\">\r\n                                <p class=\"author-name\">\r\n                                    By : {{ i.name }}\r\n                                </p>\r\n                                <p class=\"date\">\r\n                                    On : {{ i.created_date | date }}\r\n                                </p>\r\n                            </div>\r\n                        </a>\r\n                        <!--  <div class=\"col-md-4 col-xs-5 img-col\">\r\n                            <img src=\"{{i.imgurl}}\" alt=\"Avatar\" style=\"width:100%\" class=\"img-responsive\" alt=\"\">\r\n                        </div -->\r\n                    </div>\r\n                </div>\r\n                <div class=\"loading-text text-left no-result\">\r\n                    <h4 *ngIf=\"result.length === 0\">No Results Found</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <!-- <ng-template #loading>\r\n        <div *ngIf=\"isFetching && !error\" class=\"loading-text\">\r\n            <div class=\"loader\"></div>\r\n            <p> loading Contet...</p>\r\n        </div>\r\n\r\n\r\n\r\n        <div *ngIf=\"error && !isFetching\" class=\"error-text\">\r\n            <h4>{{error}}</h4>\r\n\r\n        </div>\r\n    </ng-template>\r\n    <div class=\"col-sm-4 col-xs-12\">\r\n    </div> -->\r\n\r\n        <div *ngIf=\"isFetching && !error\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"error && !isFetching\" class=\"error-text\">\r\n            <h4>{{error}}</h4>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { UPost } from './UPost.model';\r\nimport { finalize, catchError } from 'rxjs/operators';\r\nimport { Observable, Subject, throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n\r\n  uploadPercent: Observable<number>;\r\n  downloadURL: Observable<string>;\r\n  selectedFile: any | null;\r\n  currentDate = new Date();\r\n  downloadurlchange: Subject<any> = new Subject<any>();\r\n  filepath: string\r\n  uid: any;\r\n  uname: any;\r\n  constructor(\r\n    private router: Router,\r\n    private afStorage: AngularFireStorage,\r\n\r\n    private afs: AngularFirestore,\r\n\r\n  ) { }\r\n\r\n  handleError(error: any) {\r\n    let errorMessage = 'Unknown error!';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side errors\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side errors\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  getdata(data) {\r\n    this.selectedFile = data\r\n\r\n  }\r\n\r\n\r\n  get_public_post() {\r\n    return this.afs.collection('normal-users').snapshotChanges().pipe(catchError(this.handleError))\r\n  }\r\n\r\n  sendUidandUname(uname, id) {\r\n    this.uid = id\r\n    this.uname = uname\r\n  }\r\n  createUser(value: UPost) {\r\n    return this.afs.collection(`normal-users`).add({\r\n      title: value.title,\r\n      nameToSearch: value.title.toLowerCase(),\r\n      desc: value.desc,\r\n      category: value.category,\r\n      subcategory: value.subcategory,\r\n      name: value.name,\r\n      created_date: this.currentDate,\r\n      imgurl: this.downloadURL,\r\n      uid: this.uid,\r\n      uname: this.uname\r\n    })\r\n\r\n  }\r\n\r\n\r\n  uploadFile() {\r\n    const file = this.selectedFile;\r\n    this.filepath = 'UauthUsers'\r\n    const filePath = `${this.filepath}/${file.name}`;\r\n    const fileRef = this.afStorage.ref(filePath);\r\n    const task = this.afStorage.upload(filePath, file);\r\n    this.uploadPercent = task.percentageChanges();\r\n    task.snapshotChanges().pipe(\r\n      finalize(() => {\r\n        fileRef.getDownloadURL().toPromise().then((url) => {\r\n          this.downloadURL = url;\r\n          this.downloadurlchange.next(this.downloadURL)\r\n        }).catch(err => { console.log(err) });\r\n      })\r\n    )\r\n      .subscribe()\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CrudService } from '../shared/crud.service';\r\nimport { UPost } from '../shared/UPost.model';\r\nimport { AuthService } from 'src/app/Authentication/shared/auth.service';\r\nimport { ACrudService } from 'src/app/Authentication/shared/acrud.service';\r\n\r\n@Component({\r\n  selector: 'app-u-create-post',\r\n  templateUrl: './u-create-post.component.html',\r\n  styleUrls: ['./u-create-post.component.css']\r\n})\r\nexport class UCreatePostComponent implements OnInit {\r\n\r\n  isAuthenticated = false;\r\n  private userSub: Subscription;\r\n\r\n  isloading: boolean\r\n  isprofileset\r\n  isimgloading: boolean\r\n  exampleForm: FormGroup;\r\n  values = ['Happy', 'Sad', 'Success', 'Failure', 'Hurt', 'Study', 'Educational', 'Portfolio', 'Other'];\r\n  selected = 'Happy'\r\n  imageSrc: string | ArrayBuffer;\r\n  downloadURL: string;\r\n  selectedFile: any;\r\n  uploadPercent: Observable<number>;\r\n  isloggedin: boolean = false;\r\n  privacy: string\r\n  username: any;\r\n  uid: any;\r\n  error: any;\r\n  onChange(value) {\r\n\r\n    this.selected = value;\r\n\r\n  }\r\n\r\n  validation_messages = {\r\n    'title': [\r\n      { type: 'required', message: 'Title is required.' }\r\n    ],\r\n    'desc': [\r\n      { type: 'required', message: 'Description is required.' }\r\n    ],\r\n    'category': [\r\n      { type: 'required', message: 'Category is required.' },\r\n    ],\r\n    'name': [\r\n      { type: 'required', message: 'Name is required.' },\r\n    ]\r\n  };\r\n  constructor(\r\n    private router: Router,\r\n    private firebaseService: CrudService,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private acrud: ACrudService\r\n\r\n  ) { }\r\n\r\n  detectFiles(event) {\r\n    this.isimgloading = true\r\n    this.selectedFile = event.target.files[0];\r\n    if (this.selectedFile.type.split('/')[0] !== 'image') {\r\n      return alert('Pleas select an Image file');\r\n    }\r\n    this.firebaseService.getdata(this.selectedFile)\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = e => this.imageSrc = reader.result;\r\n      reader.readAsDataURL(file);\r\n\r\n    }\r\n    this.firebaseService.uploadFile()\r\n    this.uploadPercent = this.firebaseService.uploadPercent;\r\n    this.firebaseService.downloadurlchange.subscribe((data: string) => {\r\n      this.downloadURL = data\r\n\r\n      this.isimgloading = false\r\n    },\r\n      err => {\r\n        this.error = err\r\n        console.log(err.message)\r\n      })\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userSub = this.authService.user.subscribe(user => {\r\n      this.isAuthenticated = !!user;\r\n\r\n      let uid=user.uid\r\n      this.acrud.getProfileFromUid(uid).subscribe(data=>{\r\n        let profile=this.acrud.seprate(data)\r\n        this.isprofileset=profile[0].isProfileSet\r\n\r\n        if(!this.isprofileset){\r\n          this.router.navigate(['myprofile'])\r\n          this.acrud.showWarningForProfileSet()\r\n        }\r\n      })\r\n\r\n    })\r\n\r\n\r\n/*\r\n    this.acrud.getProfileFromUid() */\r\n\r\n    this.createForm();\r\n    if (this.isAuthenticated) {\r\n      this.getUidandUname()\r\n    }\r\n\r\n  }\r\n  getUidandUname() {\r\n    this.isloading = true\r\n    this.acrud.getProfile().subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.isloading = false\r\n      this.username = x[0].uname\r\n      this.uid = x[0].id\r\n      this.acrud.sendUidandUname(this.username, this.uid)\r\n      this.firebaseService.sendUidandUname(this.username, this.uid)\r\n    },\r\n      err => {\r\n        this.error = err\r\n      })\r\n  }\r\n\r\n  createForm() {\r\n    this.exampleForm = this.fb.group({\r\n      imgurl: ['', Validators.required],\r\n      title: ['', Validators.required],\r\n      desc: ['', [Validators.required, Validators.minLength(50)]],\r\n      category: [this.selected, Validators.required],\r\n      subcategory: ['  ', Validators.required],\r\n      name: ['', Validators.required],\r\n      privacy: [\"true\"],\r\n\r\n    });\r\n  }\r\n  onSubmit(value: UPost) {\r\n    if (!!this.isAuthenticated) {\r\n      if (this.exampleForm.value.privacy == \"true\") {\r\n        this.firebaseService.createUser(value)\r\n      }\r\n      this.acrud.createPost(value)\r\n      this.exampleForm.reset();\r\n      this.isloading = true\r\n    }\r\n    else {\r\n      this.firebaseService.createUser(value)\r\n        .then(\r\n          res => {\r\n            this.exampleForm.reset();\r\n            this.router.navigate(['']);\r\n          })\r\n        .catch(err => {\r\n          this.error = err\r\n          console.log(\"err\" + err)\r\n        })\r\n    }\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"container\">\r\n\r\n\r\n\r\n\r\n    <div class=\"col-md-10 col-sm-12 col-xs-12 center-block\">\r\n\r\n        <div class=\"alert alert-danger\" *ngIf=\"error\">\r\n            <p>{{ error }}</p>\r\n        </div>\r\n        <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n        <form *ngIf=\"!isloading\" class=\"create-form\" [formGroup]=\"exampleForm\" novalidate (ngSubmit)=\"onSubmit(exampleForm.value)\">\r\n\r\n            <div class=\"col-md-4 col-sm-3 col-xs-12\">\r\n                <input type=\"file\" multiple (change)=\"detectFiles($event)\" accept=\"image/x-png,image/gif,image/jpeg\" class=\"form-control\" formControlName=\"imgurl\">\r\n                <img id=\"blah\" height=\"200\" width=\"200\" class=\"img-rounded\" [src]=\"imageSrc || 'http://placehold.it/180'\" alt=\"your image\" />\r\n\r\n                <div class=\"col-xs-2 percantage\">\r\n                    <h3>{{ uploadPercent | async }}</h3>\r\n                </div>\r\n                <div class=\"col-xs-3\" *ngIf=\"isimgloading\" style=\"width: 30px; height: 30px;\">\r\n                    <img src=\"/assets/Eclipse-1s-200px.gif\" style=\"width: 60px; height: 60px;\">\r\n                </div>\r\n                <div class=\"col-xs-7\" *ngIf=\"uploadPercent && !isimgloading\">\r\n                    <a href=\"{{downloadURL}}\">To view Image click here</a>\r\n                </div>\r\n\r\n            </div>\r\n            <br>\r\n            <div class=\" col-md-8 col-sm-9 col-xs-12\">\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Title:</label>\r\n                    <div class=\"input-style\">\r\n                        <input placeholder=\"Title\" class=\"form-control\" formControlName=\"title\">\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.title\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get( 'title').hasError(validation.type) && (exampleForm.get( 'title').dirty || exampleForm.get( 'title').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Description:</label>\r\n                    <textarea class=\"form-control\" rows=\"5\" id=\"comment\" formControlName=\"desc\"></textarea>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.desc\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get( 'desc').hasError(validation.type) && (exampleForm.get( 'desc').dirty || exampleForm.get( 'desc').touched)\">\r\n                            {{validation.message}}</div>\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get( 'desc').hasError( 'minlength') && ( exampleForm.get( 'desc').touched)\">\r\n                            Minimun 50 characters required in description</div>\r\n\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"sel1\">Category list:</label>\r\n                    <select class=\"form-control\" formControlName=\"category\" #t (change)=\"onChange(t.value)\">\r\n                        <option *ngFor=\"let value of values\">{{value}} </option>\r\n                    </select>\r\n\r\n                    <ng-container *ngFor=\"let validation of validation_messages.category\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get( 'category').hasError(validation.type) && (exampleForm.get( 'category').dirty || exampleForm.get( 'category').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"input-style\" *ngIf=\"selected=='Other'\">\r\n                        <input placeholder=\"Other category\" class=\"form-control\" formControlName=\"subcategory\">\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Name:</label>\r\n                    <div class=\"input-style\">\r\n                        <input placeholder=\"Name\" class=\"form-control\" formControlName=\"name\">\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.name\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get( 'name').hasError(validation.type) && (exampleForm.get( 'name').dirty || exampleForm.get( 'name').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div *ngIf=\"isAuthenticated\" class=\"form-group\">\r\n                    <label for=\"comment\">Keep your post Public:</label>\r\n                    <div class=\"input-style\">\r\n                        <label class=\"md-check\">\r\n                            <input type=\"radio\" value=\"true\" name=\"privacy\" formControlName=\"privacy\" checked=\"true\">\r\n                            Yes keep my post Public\r\n                        </label>\r\n                        <br>\r\n                        <label class=\"md-check\">\r\n                            <input type=\"radio\" value=\"false\" name=\"privacy\" formControlName=\"privacy\">\r\n                            No keep it private\r\n                        </label>\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.title\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get( 'title').hasError(validation.type) && (exampleForm.get( 'title').dirty || exampleForm.get( 'title').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"row submit-button-container\">\r\n                    <div class=\"col-md-4\">\r\n                        <button class=\"btn btn-primary submit-button\" color=\"primary\" type=\"submit\" [disabled]=\"!exampleForm.valid\">Create</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { CrudService } from '../shared/crud.service';\r\nimport { UPost, LikeUser } from '../shared/UPost.model';\r\nimport { ACrudService } from 'src/app/Authentication/shared/acrud.service';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/Authentication/shared/auth.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-upost-detail',\r\n  templateUrl: './upost-detail.component.html',\r\n  styleUrls: ['./upost-detail.component.css'],\r\n\r\n})\r\nexport class UPostDetailComponent implements OnInit {\r\n  CommentForm: FormGroup;\r\n\r\n  id: number;\r\n  unauthpostss: UPost[];\r\n\r\n  private userSub: Subscription;\r\n  post_userid: string\r\n\r\n  count: number = 0\r\n  SinglePost: any\r\n  private puSub: Subscription;\r\n  private prSub: Subscription\r\n  private allSub: Subscription;\r\n\r\n  allPost: UPost[];\r\n  public_post: UPost[]\r\n  private_post: UPost[];\r\n  isFetching = false;\r\n  isAll = true;\r\n  isPublic = false;\r\n  isPrivate = false;\r\n  isUnauth = false\r\n  error: string\r\n  errorkey: string\r\n\r\n\r\n  href\r\n  xyz\r\n  LikeData: any;\r\n  isAuthenticated: boolean;\r\n  currentUserId: string;\r\n  likeStatus: any;\r\n  postype: any;\r\n  Comment_Data: any[];\r\n  unauthpost: UPost;\r\n  postDate: any;\r\n  ProfileImgUrl: string\r\n  isImgLoaded: boolean = false;\r\n  username: string;\r\n  profileuname: any;\r\n  publicpostOfSingleUser: any;\r\n  isPublicPostOfSingleUser: boolean;\r\n  posttitle: string;\r\n  postdesc: string;\r\n  showComment: boolean = false\r\n\r\n\r\n  /*   LikeData: {count:number,uid:{islike:boolean,uid:string}}; */\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private cd: CrudService,\r\n    public acrud: ACrudService,\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.href = this.router.url;\r\n    this.xyz = this.href.split(\"/\")\r\n    this.id = this.xyz[2]\r\n    this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n\r\n          this.id = +params['id'];\r\n\r\n          this.postype = params['type']\r\n\r\n\r\n          if (this.xyz[1] == \"home\") {\r\n            this.getAllPost();\r\n            this.showComment = true\r\n          }\r\n\r\n          if (this.xyz[1] == \"featured\") {\r\n            this.getFeaturedPost()\r\n            this.showComment = true\r\n          }\r\n          if (this.postype === 'allpost') {\r\n\r\n            this.getAuthAllPost();\r\n          }\r\n\r\n          if (this.postype === 'public') {\r\n            this.acrud.getDemo2()\r\n            this.getAuthPublicPost();\r\n            this.showComment = true\r\n          }\r\n\r\n          if (this.postype === 'private') {\r\n            this.acrud.getDemo1();\r\n            this.getAuthPrivatePost();\r\n            this.showComment = false\r\n          }\r\n          if (this.xyz[3] === 'publicposts') {\r\n            this.profileuname = this.xyz[2]\r\n            this.getPostFromProfile(this.profileuname);\r\n            this.showComment = true\r\n          }\r\n        })\r\n\r\n    this.userSub = this.authService.user.subscribe(user => {\r\n      if (user) {\r\n        this.currentUserId = user.uid\r\n      }\r\n      this.isAuthenticated = !!user;\r\n    })\r\n\r\n    if (this.isAuthenticated) {\r\n      this.getUidandUname()\r\n    }\r\n\r\n    this.getLikeCountandStatus()\r\n    this.CallCommentForm()\r\n  }\r\n\r\n  getUidandUname() {\r\n    this.acrud.getProfile().subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.username = x[0].uname\r\n    })\r\n  }\r\n  getLikeCountandStatus() {\r\n    this.acrud.PostDataForLikeCount.subscribe(d => {\r\n      if (d) {\r\n        this.count = d\r\n\r\n      }\r\n    })\r\n    this.acrud.PostDataForLikedByUser.subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n\r\n      for (const i in x) {\r\n        if ((x[i].uid) == this.currentUserId) {\r\n          this.likeStatus = x[i].islike\r\n\r\n        }\r\n      }\r\n    })\r\n  }\r\n  getPostFromProfile(uname) {\r\n    this.acrud.getPublicProfile(uname).subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      let y = x[0].id\r\n\r\n      this.getPublicPostsFromProfileId(y)\r\n\r\n      this.acrud.getPublicProfile(uname).subscribe(\r\n        d => {\r\n          let x = this.acrud.seprate(d)\r\n          this.ProfileImgUrl = x[0]?.imgurl\r\n        }\r\n      )\r\n    })\r\n  }\r\n  getPublicPostsFromProfileId(profileid) {\r\n    this.isPublicPostOfSingleUser = false\r\n    this.acrud.getPublicPostsFromProfileId(profileid).subscribe(d => {\r\n      this.isPublicPostOfSingleUser = true\r\n      let x = this.acrud.seprate(d)\r\n      this.sortDesecendingByDate(x)\r\n      this.publicpostOfSingleUser = x[this.id]\r\n      let id = this.id\r\n      this.posttitle = this.publicpostOfSingleUser.title\r\n      this.postdesc = this.publicpostOfSingleUser.desc\r\n      this.post_userid = this.publicpostOfSingleUser.uid\r\n      this.getComment(this.publicpostOfSingleUser.uid, this.publicpostOfSingleUser.title, this.publicpostOfSingleUser.desc)\r\n      this.acrud.getPostDetailForLike(this.post_userid, this.posttitle, this.postdesc)\r\n    })\r\n  }\r\n\r\n  getFeaturedPost() {\r\n    this.isFetching = true\r\n    this.acrud.getFeaturedPost().then((d: any) => {\r\n      this.publicpostOfSingleUser = d[this.id]\r\n      this.acrud.getPublicProfile(this.publicpostOfSingleUser.uname).subscribe(\r\n        d => {\r\n          let x = this.acrud.seprate(d)\r\n          this.ProfileImgUrl = x[0]?.imgurl\r\n        }\r\n      )\r\n      let id = this.id\r\n      this.posttitle = this.publicpostOfSingleUser.title\r\n      this.postdesc = this.publicpostOfSingleUser.desc\r\n      this.post_userid = this.publicpostOfSingleUser.uid\r\n      this.getComment(this.publicpostOfSingleUser.uid, this.publicpostOfSingleUser.title, this.publicpostOfSingleUser.desc)\r\n      this.acrud.getPostDetailForLike(this.post_userid, this.posttitle, this.postdesc)\r\n\r\n      this.isFetching = false\r\n    })\r\n  }\r\n\r\n  getAllPost() {\r\n    this.isUnauth = true\r\n    this.isFetching = true;\r\n    this.acrud.getAllPost().then((x: any) => {\r\n      this.isFetching = false\r\n      this.sortDesecendingByDate(x)\r\n      this.unauthpost = x[this.id]\r\n      if (this.unauthpost?.uid) {\r\n\r\n        this.post_userid = this.unauthpost?.uid\r\n        this.posttitle = this.unauthpost?.title\r\n        this.postdesc = this.unauthpost?.desc\r\n        this.getProfileFromUid(this.post_userid)\r\n        this.postDate = this.unauthpost.created_date\r\n        this.acrud.getPostDetailForLike(this.post_userid, this.posttitle, this.postdesc)\r\n        this.getComment(this.post_userid, this.unauthpost.title, this.unauthpost.desc)\r\n\r\n      }\r\n      else {\r\n        this.router.navigate([\"home\"])\r\n      }\r\n    },\r\n      err => {\r\n        this.isFetching = false\r\n        this.error = err;\r\n\r\n      })\r\n  }\r\n  sortDesecendingByDate(data) {\r\n    return data.sort((a: any, b: any) =>\r\n      <any>new Date(b.created_date) - <any>new Date(a.created_date)\r\n    )\r\n  }\r\n  getUauthPublicPost() {\r\n    this.isUnauth = true\r\n    this.isFetching = true;\r\n    this.cd.get_public_post()\r\n      .subscribe(result => {\r\n        this.unauthpostss = result.map(e => {\r\n          return {\r\n            ...e.payload.doc.data() as {}\r\n          } as UPost\r\n        },\r\n          err => {\r\n            this.error = err;\r\n          })\r\n        this.isFetching = false\r\n        this.sortDesecending()\r\n        this.unauthpost = this.unauthpostss[this.id];\r\n        if (this.unauthpost == undefined) {\r\n          this.router.navigate([\"home\"])\r\n        }\r\n        let CommentKeyPromise\r\n        if (this.unauthpost?.uid) {\r\n\r\n          this.post_userid = this.unauthpost?.uid\r\n          this.posttitle = this.unauthpost?.title\r\n          this.postdesc = this.unauthpost?.desc\r\n\r\n          this.getProfileFromUid(this.post_userid)\r\n          this.postDate = this.unauthpost.created_date\r\n          this.postDate = this.postDate.toDate()\r\n          this.acrud.getPostDetailForLike(this.post_userid, this.posttitle, this.postdesc)\r\n          this.getComment(this.post_userid, this.unauthpost.title, this.unauthpost.desc)\r\n        }\r\n        else {\r\n          this.router.navigate([\"home\"])\r\n        }\r\n      }\r\n        , err => {\r\n          this.errorkey = err;\r\n        });\r\n  }\r\n\r\n  getComment(postid, title, desc) {\r\n    let CommentKeyPromise = this.acrud.getCommentKey(postid, title, desc)\r\n      .then(d => {\r\n        return new Promise(resolve => {\r\n          resolve(d)\r\n        })\r\n      })\r\n\r\n    if (CommentKeyPromise) {\r\n      CommentKeyPromise.then(key => {\r\n        this.acrud.getCommentDataFromKey(postid, key)\r\n          .subscribe((commentData: Comment) => {\r\n            this.Comment_Data = this.acrud.seprate(commentData)\r\n            if (commentData) {\r\n              this.Comment_Data.sort((a, b) => new Date(b.commentOn).getTime() - new Date(a.commentOn).getTime());\r\n            }\r\n            for (let i in this.Comment_Data) {\r\n              this.acrud.getProfileFromUid(this.Comment_Data[i].commentByUserId)\r\n                .subscribe(data => {\r\n                  let x = this.acrud.seprate(data)\r\n                  this.Comment_Data[i].uname = x[0].uname\r\n                })\r\n            }\r\n          })\r\n      })\r\n    }\r\n  }\r\n\r\n  getProfileFromUid(postuserid) {\r\n    this.acrud.getProfileFromUid(postuserid)\r\n      .subscribe((data) => {\r\n        let profile = this.acrud.seprate(data)\r\n        this.ProfileImgUrl = profile[0].imgurl\r\n      })\r\n  }\r\n  getAuthPublicPost() {\r\n    this.isAll = false;\r\n    this.isPublic = true;\r\n    this.isPrivate = false;\r\n    this.isFetching = true;\r\n    this.puSub = this.acrud.pu.subscribe(d => {\r\n      if (d) {\r\n        this.sortDesecendingByDate(d)\r\n        this.public_post = d\r\n        if (this.public_post) {\r\n\r\n        }\r\n        let id = this.id\r\n        this.posttitle = this.public_post[id].title\r\n        this.postdesc = this.public_post[id].desc\r\n        this.post_userid = this.public_post[id].uid\r\n        this.getComment(this.public_post[id].uid, this.public_post[id].title, this.public_post[id].desc)\r\n        //this.SinglePost=this.public_post[this.id]\r\n\r\n        // this.SinglePost = this.public_post[this.id]\r\n      }\r\n    },\r\n      err =>\r\n        this.error = err)\r\n  }\r\n\r\n  getAuthAllPost() {\r\n    this.isFetching = true\r\n    this.isAll = true;\r\n    this.isPublic = false;\r\n    this.isPrivate = false;\r\n    this.acrud.getAllData()\r\n      .subscribe(data => {\r\n\r\n        this.isFetching = false\r\n        let x1 = data[0]\r\n        let x2 = data[1]\r\n        let x3 = []\r\n        x3 = this.acrud.seprate(x1)\r\n        let x4 = this.acrud.seprate(x2)\r\n\r\n        let x5 = x3.concat(x4)\r\n        this.allPost = x5\r\n        this.sortDesecendingByDate(this.allPost)\r\n\r\n        let id = this.id\r\n        if (this.allPost[id]?.privacy == \"true\") {\r\n          this.showComment = true;\r\n        }\r\n\r\n        if (this.allPost[id]?.privacy == \"false\") {\r\n          this.showComment = false;\r\n        }\r\n        this.posttitle = this.allPost[id].title\r\n        this.postdesc = this.allPost[id].desc\r\n        this.post_userid = this.allPost[id].uid\r\n        this.getComment(this.allPost[id].uid, this.allPost[id].title, this.allPost[id].desc)\r\n\r\n      },\r\n\r\n        err => {\r\n          this.error = err\r\n        })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  getAuthPrivatePost() {\r\n    this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n          this.id = +params['id'];\r\n\r\n\r\n          this.isAll = false;\r\n          this.isPublic = false;\r\n          this.isPrivate = true;\r\n          this.isFetching = true;\r\n\r\n          this.prSub = this.acrud.pr.subscribe(d => {\r\n            this.isFetching = false\r\n            this.private_post = d\r\n            this.SinglePost = this.private_post[this.id]\r\n\r\n          })\r\n\r\n        });\r\n\r\n  }\r\n  sortDesecending() {\r\n    this.acrud.sortDesecending(this.unauthpostss)\r\n\r\n  }\r\n\r\n\r\n  Like() {\r\n\r\n    if (!this.currentUserId) {\r\n      this.router.navigate([\"/auth\"])\r\n    }\r\n\r\n    else {\r\n      let likestatus = this.likeStatus;\r\n\r\n      if (likestatus) {\r\n        this.count = this.count - 1\r\n\r\n      }\r\n      else {\r\n        this.count = this.count + 1\r\n\r\n      }\r\n      this.likeStatus = !this.likeStatus;\r\n      this.acrud.CreateLikeEntry(this.count, this.likeStatus, this.post_userid, this.posttitle, this.postdesc)\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  navigateToProfile(uname: string) {\r\n\r\n    if (uname) {\r\n      this.router.navigate(['myprofile', uname])\r\n    }\r\n    else {\r\n\r\n      this.router.navigate([\"/home\"])\r\n    }\r\n\r\n  }\r\n\r\n  CallCommentForm() {\r\n    this.CommentForm = this.fb.group({\r\n      comment: ['', Validators.required],\r\n    })\r\n  }\r\n\r\n\r\n\r\n  onSubmit(value: Comment) {\r\n    if (this.isAuthenticated) {\r\n        this.acrud.CreateComment(value, this.currentUserId, this.post_userid, this.posttitle, this.postdesc)\r\n          .then(() => {\r\n            this.CommentForm.reset()\r\n            setTimeout(() => {\r\n              window.location.reload()\r\n            }, 900)\r\n          })\r\n      }\r\n    else {\r\n      alert(\"Please Login or create your account to do Comment\")\r\n    }\r\n  }\r\n\r\n  OnDelete() {\r\n\r\n    if (this.xyz[2] == \"allpost\") {\r\n      this.acrud.passParams(this.xyz[2], this.id)\r\n      this.acrud.deletPostEvent(this.allPost[this.id], this.id)\r\n        .then(d => {\r\n          this.acrud.showSuccessDelete()\r\n        })\r\n\r\n    }\r\n    if (this.xyz[2] == \"public\") {\r\n      this.acrud.passParams(this.xyz[2], this.id)\r\n      this.acrud.deletPostEvent(this.public_post[this.id], this.id).then(d => {\r\n        this.acrud.showSuccessDelete()\r\n      })\r\n\r\n    }\r\n    if (this.xyz[2] == \"private\") {\r\n\r\n      this.acrud.passParams(this.xyz[2], this.id)\r\n      this.acrud.deletPostEvent(this.private_post[this.id], this.id)\r\n        .then(d => {\r\n          this.acrud.showSuccessDelete()\r\n        })\r\n\r\n    }\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n    if (this.prSub && this.private_post) {\r\n      this.prSub.unsubscribe()\r\n    }\r\n\r\n    if (this.puSub && this.public_post) {\r\n      this.puSub.unsubscribe()\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3 col-sm-12 post-exist\" *ngIf=\"isAuthenticated && xyz[1]!=='home' && xyz[1]!== 'myprofile'\">\r\n        <div class=\"list-group\">\r\n            <a class=\"list-group-item\" routerLink=\"/create-post\">Add new Post</a>\r\n\r\n            <a class=\"list-group-item\" [routerLink]=\"['/myposts',postype,id,'edit']\">Edit Post</a>\r\n\r\n            <a class=\"list-group-item\" data-toggle=\"modal\" data-target=\"#myModal\">Delete Post</a>\r\n\r\n            <a class=\"list-group-item\" [ngClass]=\"{ active: isPrivate == true }\" [routerLink]=\"['/myposts']\">My\r\n                Posts</a>\r\n        </div>\r\n        <div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\r\n            <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        <h4 class=\"modal-title\">Please confirm Delete Action</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <p>Are you sure you want to Delete Post.</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"OnDelete()\">Delete</button>\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container container-postdetil col-md-9 col-sm-12\">\r\n\r\n        <div class=\"row\" *ngIf=\"xyz[1]=='home' &&\r\n      isUnauth &&\r\n      unauthpost && !isFetching;else loading\r\n    \">\r\n            <div class=\"col-xs-12\">\r\n                <h2 class=\"title\">\r\n                    {{ unauthpost.title }}\r\n                </h2>\r\n                '\r\n                <div class=\"avtar\">\r\n                    <!--   <img *ngIf=\"!isImgLoaded\" [src]=\"'https://i.pinimg.com/originals/10/b2/f6/10b2f6d95195994fca386842dae53bb2.png' \" \r\n                class=\"img-responsive img-circle\" /> -->\r\n\r\n                    <img alt=\"\" [src]=\"ProfileImgUrl || 'https://i.pinimg.com/originals/10/b2/f6/10b2f6d95195994fca386842dae53bb2.png'\" class=\"img-responsive img-circle\" />\r\n\r\n                    <div class=\"avtar-text\">\r\n                        <a class=\"author-name\" (click)=\"navigateToProfile(unauthpost.uname)\">\r\n\r\n                            {{ unauthpost.uname }}\r\n                        </a>\r\n\r\n                        <p class=\"category\">\r\n                            <b>Category: </b> {{ unauthpost.category }}\r\n\r\n                            <span *ngIf=\"unauthpost.subcategory && unauthpost.subcategory.trim()\">\r\n                                <b>Sub </b> {{unauthpost .subcategory}}\r\n                            </span>\r\n\r\n\r\n                        </p>\r\n\r\n\r\n                    </div>\r\n                    <p class=\"date\">\r\n                        {{ postDate | date:\"medium\" }}\r\n                        <!-- <b>Written on : </b> {{ unauthpost.created_date.toDate() | date: \"medium\" }} -->\r\n\r\n                    </p>\r\n                </div>\r\n                <div *ngIf=\"unauthpost.imgurl;else loading\">\r\n                    <img *ngIf=\"!isImgLoaded\" [src]=\"'https://i.pinimg.com/originals/10/b2/f6/10b2f6d95195994fca386842dae53bb2.png' \" class=\"img-responsive\" alt=\"img\" />\r\n                    <img [hidden]=\" !isImgLoaded\" [src]=\"unauthpost.imgurl \" (load)=\"isImgLoaded=true \" class=\"img-responsive \" alt=\"\">\r\n                    <figcaption>{{ unauthpost.title }}</figcaption>\r\n                </div>\r\n                <!-- <div *ngIf=\"!unauthpost.imgurl \">\r\n        <img src=\"https://i.pinimg.com/originals/10/b2/f6/10b2f6d95195994fca386842dae53bb2.png \" loading=\"lazy \" class=\"img-responsive \" />\r\n        <figcaption>{{ unauthpost.title }}</figcaption>\r\n    </div> -->\r\n                <div class=\"stage \" (click)=\"Like() \">\r\n                    <div class=\"heart \" [ngClass]=\"likeStatus? 'is-active': '' \">\r\n                        <span>Like {{count}}</span>\r\n                    </div>\r\n                </div>\r\n                <!-- <p class=\"desc \">{{ unauthpost.desc }}</p> -->\r\n                <p class=\"desc\" [innerHTML]=\"unauthpost.desc| noSanitize\"></p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"(xyz[3]=='publicposts' || xyz[1]==='featured') && publicpostOfSingleUser as data;else loading7\">\r\n            <div class=\"col-xs-12\">\r\n                <h2 class=\"title\">\r\n                    {{ data.title }}\r\n                </h2>\r\n                '\r\n                <div class=\"avtar\">\r\n                    <img alt=\"\" [src]=\"ProfileImgUrl || 'https://i.pinimg.com/originals/10/b2/f6/10b2f6d95195994fca386842dae53bb2.png'\" class=\"img-responsive img-circle\" />\r\n                    <div class=\"avtar-text\">\r\n                        <a class=\"author-name\" (click)=\"navigateToProfile(data.uname)\">\r\n                            {{ data.uname }}\r\n                        </a>\r\n\r\n                        <p class=\"category\">\r\n                            <b>Category: </b> {{ data.category }}\r\n\r\n                        </p>\r\n\r\n                    </div>\r\n                    <p class=\"date\">\r\n                        <b>Written on : </b> {{ data.created_date | date:\"medium\" }}\r\n                        <!-- <b>Written on : </b> {{ data.created_date.toDate() | date: \"medium\" }} -->\r\n\r\n                    </p>\r\n                </div>\r\n                <div *ngIf=\"data.imgurl;else loading7\">\r\n                    <img alt=\"\" *ngIf=\"!isImgLoaded\" [src]=\"'https://i.pinimg.com/originals/10/b2/f6/10b2f6d95195994fca386842dae53bb2.png' \" class=\"img-responsive\" />\r\n                    <img alt=\"\" [hidden]=\" !isImgLoaded\" [src]=\"data.imgurl \" (load)=\"isImgLoaded=true \" class=\"img-responsive \">\r\n                    <figcaption>{{ data.title }}</figcaption>\r\n                </div>\r\n\r\n                <div class=\"stage \" (click)=\"Like() \">\r\n                    <div class=\"heart \" [ngClass]=\"likeStatus? 'is-active': '' \">\r\n                        <span>Like {{count}}</span></div>\r\n                </div>\r\n\r\n                <p class=\"desc\" [innerHTML]=\"data.desc| noSanitize\"></p>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row \" *ngIf=\"postype=='public'  && public_post as i;else loading2 \">\r\n            <div class=\"col-md-9 col-xs-12 \">\r\n                <h2 class=\"title \">{{ i[id]?.title }}</h2>\r\n                '\r\n                <div class=\"avtar \">\r\n                    <img alt=\"\" src=\"https://image.shutterstock.com/image-vector/man-character-face-avatar-glasses-260nw-562077406.jpg \" class=\"img-responsive img-circle \" />\r\n\r\n                    <div class=\"avtar-text\">\r\n                        <a class=\"author-name\" (click)=\"navigateToProfile(i[id]?.uname)\">\r\n                            {{ i[id]?.uname }}</a>\r\n                        <p class=\"category \"><b>Category: </b>{{ i[id]?.category }}</p>\r\n                    </div>\r\n                    <p class=\"date \">\r\n                        <b>Written on : </b>{{ i[id]?.created_date | date: \"medium\" }}\r\n                    </p>\r\n                </div>\r\n\r\n\r\n                <div *ngIf=\"i[id]?.imgurl;else loading7\">\r\n                    <img alt=\"\" *ngIf=\"!isImgLoaded\" [src]=\"'https://i.pinimg.com/originals/10/b2/f6/10b2f6d95195994fca386842dae53bb2.png' \" class=\"img-responsive\" />\r\n                    <img alt=\" \" [hidden]=\" !isImgLoaded\" [src]=\"i[id]?.imgurl \" (load)=\"isImgLoaded=true \" class=\"img-responsive \">\r\n                    <figcaption>{{ i[id]?.title }}</figcaption>\r\n                </div>\r\n\r\n                <!--   <img src=\"{{ i[id]?.imgurl }} \" class=\"img-responsive \" />\r\n        <figcaption>{{ i[id]?.title }}</figcaption> -->\r\n                <!--    <p class=\"desc \">{{ i[id]?.desc }}</p> -->\r\n                <p class=\"desc \" [innerHTML]=\"i[id]?.desc| noSanitize\"></p>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row \" *ngIf=\"postype=='private' && acrud.pr | async as i;else loading3 \">\r\n            <div class=\"col-xs-12 \">\r\n                <h2 class=\"title \">{{ i[id]?.title }}</h2>\r\n                '\r\n                <div class=\"avtar \">\r\n                    <img alt=\"\" src=\"https://image.shutterstock.com/image-vector/man-character-face-avatar-glasses-260nw-562077406.jpg \" class=\"img-responsive img-circle \" />\r\n\r\n                    <div class=\"avtar-text \">\r\n                        <p class=\"author-name \">{{ i[id]?.uname }}</p>\r\n                        <p class=\"category \"><b>Category: </b>{{ i[id]?.category }}</p>\r\n                    </div>\r\n                    <p class=\"date \">\r\n                        <b>Written on : </b>{{ i[id]?.created_date | date: \"medium\" }}\r\n                    </p>\r\n                </div>\r\n\r\n                <img src=\"{{ i[id]?.imgurl }} \" class=\"img-responsive \" alt=\"\" />\r\n                <figcaption>{{ i[id]?.title }}</figcaption>\r\n                <!--   <p class=\"desc \">{{ i[id]?.desc }}</p> -->\r\n\r\n                <p class=\"desc \" [innerHTML]=\"i[id]?.desc| noSanitize\"></p>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row \" *ngIf=\"postype=='allpost' && !isFetching && allPost as i;else loading5 \">\r\n            <div class=\"col-xs-12 \">\r\n                <h2 class=\"title \">{{ i[id]?.title }}</h2>\r\n                '\r\n                <div class=\"avtar \">\r\n                    <img alt=\"\" src=\"https://image.shutterstock.com/image-vector/man-character-face-avatar-glasses-260nw-562077406.jpg \" class=\"img-responsive img-circle \" />\r\n\r\n                    <div class=\"avtar-text \">\r\n                        <p class=\"author-name \">{{ i[id]?.uname }}</p>\r\n                        <p class=\"category \"><b>Category: </b>{{ i[id]?.category }}</p>\r\n                    </div>\r\n                    <p class=\"date \">\r\n                        <b>Written on : </b>{{ i[id]?.created_date| date: \"medium\" }}\r\n                    </p>\r\n                </div>\r\n\r\n                <img src=\"{{ i[id]?.imgurl }} \" class=\"img-responsive post-img\" alt=\"img\" />\r\n                <figcaption>{{ i[id]?.title }}</figcaption>\r\n                <!-- <p class=\"desc \">{{ i[id]?.desc }}</p> -->\r\n\r\n                <p class=\"desc \" [innerHTML]=\"i[id]?.desc| noSanitize\"></p>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"showComment && !isFetching\">\r\n\r\n            <hr>\r\n            <form class=\"create-form \" [formGroup]=\"CommentForm\" novalidate (ngSubmit)=\"onSubmit(CommentForm.value) \">\r\n                <div class=\"form-group \">\r\n                    <label for=\"comment \">Leave Your Comment Here:</label>\r\n                    <textarea class=\"form-control \" rows=\"5 \" id=\"comment \" formControlName=\"comment\"></textarea>\r\n\r\n                </div>\r\n                <div class=\"row submit-button-container \">\r\n                    <div class=\"col-md-4 \">\r\n                        <button class=\"btn btn-primary submit-button \" color=\"primary \" type=\"submit \" [disabled]=\"!CommentForm.valid \">Post your comment</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div class=\"col-md-12 commentsection\" *ngIf=\"Comment_Data \">\r\n            <hr>\r\n            <div *ngFor=\"let x of Comment_Data \">\r\n                <h4>{{x.uname}}</h4>\r\n                <p class=\"date\">{{x.commentOn| date:\"medium\"}}</p>\r\n                <p class=\"data\">{{x.comment}}</p>\r\n                <hr>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #loading>\r\n        <div *ngIf=\"isFetching && isUnauth\" class=\"loading-text \">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"error || errorkey \" class=\"loading-text \">\r\n\r\n            <h3>{{errorkey}}</h3>\r\n            <p> {{error}}</p>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #loading2>\r\n        <div *ngIf=\"isFetching && postype==='public' \" class=\"loading-text \">\r\n            <app-loading-spinner>loaduin</app-loading-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"error || errorkey \" class=\"loading-text \">\r\n\r\n            <h3>{{errorkey}}</h3>\r\n            <p> {{error}}</p>\r\n        </div>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template #loading3>\r\n        <div *ngIf=\"isFetching && postype==='private' \" class=\"loading-text \">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"error || errorkey \" class=\"loading-text \">\r\n\r\n            <h3>{{errorkey}}</h3>\r\n            <p> {{error}}</p>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #loading5>\r\n        <div *ngIf=\"isFetching && postype==='allpost' \" class=\"loading-text \">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"error || errorkey \" class=\"loading-text \">\r\n\r\n            <h3>{{errorkey}}</h3>\r\n            <p> {{error}}</p>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #loading7>\r\n        <div *ngIf=\"!publicpostOfSingleUser && (this.xyz[3]==='publicposts'  || xyz[1]=='featured')\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"error || errorkey \" class=\"loading-text \">\r\n\r\n            <h3>{{errorkey}}</h3>\r\n            <p> {{error}}</p>\r\n        </div>\r\n    </ng-template>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UCreatePostComponent } from './Unauthenticated/u-create-post/u-create-post.component';\r\nimport { UPostDetailComponent } from './Unauthenticated/upost-detail/upost-detail.component';\r\nimport { HomeComponent } from './Unauthenticated/home/home.component';\r\nimport { AuthComponentComponent } from './Authentication/auth-component/auth-component.component';\r\nimport { UserPostComponent } from './user/user-post/user-post.component';\r\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\r\nimport { ProfileComponent } from './user/profile/profile.component';\r\nimport { ViewProfileComponent } from './user/view-profile/view-profile.component';\r\nimport { ViewOnlyPublicPostComponent } from './user/view-only-public-post/view-only-public-post.component';\r\nimport { AuthGuard } from './Authentication/shared/auth-guard.service';\r\nimport { ResetpasswordComponent } from './Authentication/resetpassword/resetpassword.component';\r\nimport { VerifyMailComponent } from './Authentication/verify-mail/verify-mail.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'home/:id', component: UPostDetailComponent ,pathMatch: 'full'},\r\n  { path: 'featured/:id', component: UPostDetailComponent ,pathMatch: 'full'},\r\n  { path: 'myprofile', component: ProfileComponent ,pathMatch: 'full',canActivate: [AuthGuard]},\r\n  \r\n  { path: 'myprofile/:username', component: ViewProfileComponent ,pathMatch: 'full'},\r\n  { path: 'myprofile/:username/editProfile', component: ProfileComponent ,canActivate: [AuthGuard]},\r\n  { path: 'myprofile/:username/publicposts', component: ViewOnlyPublicPostComponent},\r\n  { path: 'myprofile/:username/publicposts/:id', component: UPostDetailComponent},\r\n  { path: 'create-post', component: UCreatePostComponent, canActivate: [AuthGuard]},\r\n  { path: 'auth', component: AuthComponentComponent },\r\n  { path: 'verify-mail', component: VerifyMailComponent },\r\n  { path: 'reset-password', component: ResetpasswordComponent },\r\n  { path: 'myposts', redirectTo: 'myposts/allpost', pathMatch: 'full' },\r\n  { path: 'myposts/:type', component: UserPostComponent,pathMatch: 'full'  },\r\n \r\n  { path: 'myposts/:type/:id', component: UPostDetailComponent },\r\n  { path: 'myposts/:type/:id/edit', component: UserEditComponent },\r\n  { path: 'myposts/:type/:id/delete', component: UPostDetailComponent },\r\n  \r\n  {path: '**/undefined', redirectTo: '/home'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{scrollPositionRestoration: 'enabled',useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './Authentication/shared/auth.service';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport * as firebase from 'firebase/app';\r\nimport { ACrudService } from './Authentication/shared/acrud.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  isAuthenticated = false;\r\n  x\r\n  ProfieData: { uname: any; desc: string; email: string; name: any; created_date: Date; imgurl: Observable<string>; isProfileSet: boolean };\r\n  isprofileSet: boolean = false\r\n  username: string\r\n  private userSub: Subscription;\r\n  allpostcount: number = 0;\r\n  isemailverfied: boolean\r\n\r\n  isloading: boolean = false\r\n  constructor(private authService: AuthService, private acrud: ACrudService, private router: Router) {\r\n    this.acrud.username.subscribe(d => {\r\n      this.username = d\r\n\r\n    })\r\n  }\r\n  title = 'write-your-heart-out';\r\n\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\r\n    if (this.isloading) {\r\n      window.onscroll = function () { myFunction() };\r\n\r\n      // Get the header\r\n      var header = document.getElementById(\"myHeader\");\r\n\r\n      // Get the offset position of the navbar\r\n      var sticky = header.offsetTop;\r\n\r\n      // Add the sticky class to the header when you reach its scroll position. Remove \"sticky\" when you leave the scroll position\r\n      function myFunction() {\r\n        if (window.pageYOffset > sticky) {\r\n          header.classList.add(\"sticky\");\r\n        } else {\r\n          header.classList.remove(\"sticky\");\r\n        }\r\n      }\r\n    }\r\n\r\n    this.isloading = true\r\n    this.authService.autoLogin();\r\n    this.authService.isLoggedIn1()\r\n    this.userSub = this.authService.user.subscribe((user: any) => {\r\n      this.isloading = false\r\n\r\n      if (user) {\r\n        this.isemailverfied = user.emailVerified\r\n\r\n      }\r\n      this.isAuthenticated = !!user;\r\n      console.log(!user);\r\n      console.log(!!user);\r\n\r\n      console.log(this.isAuthenticated)\r\n      if (this.isAuthenticated) {\r\n        this.acrud.getProfileFromUid(user.uid).subscribe(\r\n          d => {\r\n            let x2: {} = {}\r\n\r\n            let x = this.acrud.seprate(d)\r\n\r\n\r\n            this.ProfieData = x[0]\r\n            if (this.ProfieData) {\r\n              this.isprofileSet = this.ProfieData.isProfileSet\r\n              this.username = this.ProfieData.uname\r\n\r\n            }\r\n\r\n          }\r\n        )\r\n      }\r\n\r\n\r\n    });\r\n\r\n    this.getAllPosts()\r\n\r\n  }\r\n  getAllPosts() {\r\n    this.isloading = true\r\n    this.acrud.getAllData()\r\n      .subscribe(data => {\r\n        let x1 = data[0]\r\n        let x2 = data[1]\r\n        let x3 = []\r\n        x3 = this.acrud.seprate(x1)\r\n        let x4 = this.acrud.seprate(x2)\r\n        let x5 = x3.concat(x4)\r\n        this.allpostcount = x5.length\r\n        this.isloading = false\r\n\r\n      })\r\n  }\r\n  ViewCV = () => {\r\n    alert ('you dont have permission to download CV ')\r\n    return;\r\n  }\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-default main-header\">\r\n  <div class=\"container header-main\">\r\n    <div class=\"navbar-header\">\r\n      <a routerLink=\"/\" class=\"navbar-brand\">Tu Hai Blog</a>\r\n      <div class=\"footer-icons\">\r\n        <ul class=\"navbar-nav \">\r\n          <li class=\"nav-item inline-block\">\r\n            <a href=\"http://tu-hai.github.io\" aria-label=\"Github\" class=\"nav-link text-github\">\r\n              <i class=\"fa fa-github\" style=\"font-size: 24px; color: black;\"></i></a>\r\n          </li>\r\n          <li class=\"nav-item inline-block\">\r\n            <a href=\"\" aria-label=\"Medium\" class=\"nav-link\">\r\n              <span><img class=\"img-circle medium-icon\" width=\"24\" alt=\"\"\r\n                  src=\"https://seeklogo.com/images/M/medium-logo-93CDCF6451-seeklogo.com.png\"></span></a>\r\n          </li>\r\n          <li class=\"nav-item inline-block\">\r\n            <a href=\"https://www.linkedin.com/in/vo-tu-hai-0311aa182/\" aria-label=\"Instagram\" class=\"nav-link\">\r\n              <i class=\"fa fa-instagram\" style=\"font-size: 24px; color: black;\"></i></a>\r\n          </li>\r\n          <li class=\"nav-item inline-block\">\r\n            <a href=\"https://www.linkedin.com/in/vo-tu-hai-0311aa182/\" aria-label=\"LinkedIn\" class=\"nav-link\">\r\n              <i class=\"fa fa-linkedin\" style=\"font-size: 24px; color: black;\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"collapse navbar-collapse\" id=\"myHeader\">\r\n      <ul class=\"nav navbar-nav\">\r\n        <li routerLinkActive=\"active\">\r\n          <!--      <a routerLink=\"/login\">login</a> -->\r\n        </li>\r\n        <li routerLinkActive=\"active\">\r\n          <!--    <a routerLink=\"/signup\">Sign-up</a> -->\r\n        </li>\r\n        <li routerLinkActive=\"active\">\r\n          <a class=\"hover-underline\" *ngIf=\"allpostcount==0\" routerLink=\"/create-post\">Create post</a>\r\n          <a class=\"hover-underline\" *ngIf=\"allpostcount>0\" routerLink=\"/create-post\">Add Post</a>\r\n        </li>\r\n\r\n        <li routerLinkActive=\"active\" *ngIf=\"!isAuthenticated\">\r\n          <a class=\"hover-underline\" routerLink=\"/auth\">Authenticate</a>\r\n        </li>\r\n        <li routerLinkActive=\"active\" *ngIf=\"isAuthenticated && isemailverfied\">\r\n          <a class=\"hover-underline\" routerLink=\"/myposts\">MyPosts</a>\r\n        </li>\r\n        <li routerLinkActive=\"active\" *ngIf=\"isAuthenticated && !isprofileSet \">\r\n          <a class=\"hover-underline\" routerLink='/myprofile'>CreateProfile</a>\r\n        </li>\r\n        <li routerLinkActive=\"active\" *ngIf=\"isAuthenticated && isprofileSet && isemailverfied\">\r\n          <a class=\"hover-underline\" [routerLink]=\"['/myprofile', username]\">MyProfile</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"nav navbar-nav navbar-right\">\r\n        <li *ngIf=\"isAuthenticated\">\r\n          <a class=\"hover-underline\" style=\"cursor: pointer;\" (click)=\"ViewCV()\">My CV</a>\r\n        </li>\r\n        <li *ngIf=\"isAuthenticated\">\r\n          <a class=\"hover-underline\" style=\"cursor: pointer;\" (click)=\"onLogout()\">Logout</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<div class=\"footer-icons hidden-xs hidden-sm\">\r\n  <ul class=\"navbar-nav \">\r\n    <li class=\"nav-item inline-block\">\r\n      <a href=\"https://tu-hai.github.io\" aria-label=\"Github\" class=\"nav-link text-github\"><i class=\"fa fa-github\"\r\n          style=\"font-size: 24px; color: black;\"></i></a>\r\n    </li>\r\n    <li class=\"nav-item inline-block\">\r\n      <a href=\"https://www.youtube.com/watch?v=hwccAx8iVag&list=FLHry7FzoRkJWX3vqxM5F7iw&ab_channel=TuHai\" aria-label=\"Youtube\" class=\"nav-link text-youtube\"><i class=\"fa fa-youtube\"\r\n          style=\"font-size: 24px; color: black;\"></i></a>\r\n    </li>\r\n    <li class=\"nav-item inline-block\"><a href=\"https://www.facebook.com/hgiveup301/\" aria-label=\"Facebook\" class=\"nav-link\"><i class=\"fa fa-facebook\"\r\n          style=\"font-size: 24px; color: black;\"></i></a>\r\n    </li>\r\n    <li class=\"nav-item inline-block\">\r\n      <a href=\"https://www.linkedin.com/in/vo-tu-hai-0311aa182/\" aria-label=\"LinkedIn\" class=\"nav-link\"><i\r\n          class=\"fa fa-linkedin\" style=\"font-size: 24px; color: black;\"></i></a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n<div class=\"container middle\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<div class=\"container\" *ngIf=\"!isloading\">\r\n  <footer class=\"fadeInUp col-md-12\">\r\n    <a href=\"https://github.com/tu-hai/MyBlog\" class=\"button github\"><svg xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\r\n        stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n        <path\r\n          d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\">\r\n        </path>\r\n      </svg><span>Open Sourced on GitHub</span></a>\r\n    <a href=\"https://tu-hai.github.io\" class=\"button btn-light medium\">\r\n      <span><img class=\"img-circle\" width=\"20\" alt=\"\"\r\n          src=\"https://seeklogo.com/images/M/medium-logo-93CDCF6451-seeklogo.com.png\">Read about this Project\r\n        On MEDIUM</span></a>\r\n\r\n\r\n    <div class=\"footer-icons\">\r\n      <ul class=\"navbar-nav \">\r\n        <li class=\"nav-item inline-block\">\r\n          <a href=\"https://github.com/mehulk05\" aria-label=\"Github\" class=\"nav-link text-github\"><i class=\"fa fa-github\"\r\n              style=\"font-size: 24px; color: black;\"></i></a>\r\n        </li>\r\n        <li class=\"nav-item inline-block\">\r\n          <a href=\"\" aria-label=\"Medium\" class=\"nav-link\">\r\n\r\n            <span><img class=\"img-circle medium-icon\" width=\"24\" alt=\"\"\r\n                src=\"https://seeklogo.com/images/M/medium-logo-93CDCF6451-seeklogo.com.png\"></span></a>\r\n        </li>\r\n        <li class=\"nav-item inline-block\"><a href=\"\" aria-label=\"Insagram\" class=\"nav-link\"><i class=\"fa fa-instagram\"\r\n              style=\"font-size: 24px; color: black;\"></i></a>\r\n        </li>\r\n        <li class=\"nav-item inline-block\"><a href=\"https://www.linkedin.com/in/vo-tu-hai-0311aa182/\"\r\n            aria-label=\"LinkedIn\" class=\"nav-link\"><i class=\"fa fa-linkedin\"\r\n              style=\"font-size: 24px; color: black;\"></i></a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </footer>\r\n</div>\r\n<h5 *ngIf=\"!isloading\" class=\"text-center copyright\"> ©Copyrights reserved by Tu Hai© 2021</h5>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore'\r\nimport {\r\n  AngularFireStorageModule,\r\n  AngularFireStorageReference,\r\n  AngularFireUploadTask,\r\n\r\n} from \"@angular/fire/storage\";\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './Unauthenticated/home/home.component';\r\nimport { UCreatePostComponent } from './Unauthenticated/u-create-post/u-create-post.component';\r\nimport { UPostDetailComponent } from './Unauthenticated/upost-detail/upost-detail.component';\r\n\r\nimport { CrudService } from './Unauthenticated/shared/crud.service';\r\nimport { AuthComponentComponent } from './Authentication/auth-component/auth-component.component';\r\nimport { AuthService } from './Authentication/shared/auth.service';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\n\r\nimport { ACrudService } from './Authentication/shared/acrud.service';\r\nimport { UserPostComponent } from './user/user-post/user-post.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\r\nimport { ProfileComponent } from './user/profile/profile.component';\r\nimport { ViewProfileComponent } from './user/view-profile/view-profile.component';\r\n\r\nimport { ViewOnlyPublicPostComponent } from './user/view-only-public-post/view-only-public-post.component';\r\nimport { AuthGuard } from './Authentication/shared/auth-guard.service';\r\nimport { LoadingSpinnerComponent } from './spinner/loading-spinner/loading-spinner.component';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { ResetpasswordComponent } from './Authentication/resetpassword/resetpassword.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { VerifyMailComponent } from './Authentication/verify-mail/verify-mail.component';\r\nimport { NoSanitizePipe } from './Authentication/shared/no-sanitize.pipe';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    UCreatePostComponent,\r\n    UPostDetailComponent,\r\n    AuthComponentComponent,\r\n    UserPostComponent,\r\n    UserEditComponent,\r\n    ProfileComponent,\r\n    ViewProfileComponent,\r\n    ViewOnlyPublicPostComponent,\r\n    LoadingSpinnerComponent,\r\n    ResetpasswordComponent,\r\n    VerifyMailComponent,\r\n    NoSanitizePipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n    AngularFireStorageModule,\r\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\r\n    Ng2SearchPipeModule,\r\n    ToastrModule.forRoot()\r\n\r\n  ],\r\n  providers: [CrudService,AuthService,ACrudService,AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-dual-ring\"></div>\r\n<h3>Loading...</h3>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CrudService } from 'src/app/Unauthenticated/shared/crud.service';\r\nimport { AuthService } from 'src/app/Authentication/shared/auth.service';\r\nimport { ACrudService } from 'src/app/Authentication/shared/acrud.service';\r\nimport { Profile } from 'src/app/Authentication/shared/user.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  imageSrc: string | ArrayBuffer;\r\n  downloadURL: string;\r\n  selectedFile: any;\r\n  uploadPercent: Observable<number>;\r\n\r\n  ProfileForm: FormGroup;\r\n\r\n  validation_messages = {\r\n    'uname': [\r\n      { type: 'required', message: 'Title is required.' }\r\n    ],\r\n\r\n    'email': [\r\n      { type: 'required', message: 'Category is required.' },\r\n    ],\r\n    'name': [\r\n      { type: 'required', message: 'Name is required.' },\r\n    ]\r\n  };\r\n  href: string;\r\n  profileReturned: any;\r\n  x: string[];\r\n  username: any;\r\n  erroUsername: string;\r\n  oldusername: any;\r\n  usernamParam: string\r\n  email: string\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private firebaseService: CrudService,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private acrud: ACrudService\r\n  ) { }\r\n\r\n  detectFiles(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    if (this.selectedFile.type.split('/')[0] !== 'image') {\r\n      return alert('Pleas select an Image file');\r\n    }\r\n    this.firebaseService.getdata(this.selectedFile)\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = e => this.imageSrc = reader.result;\r\n      reader.readAsDataURL(file);\r\n\r\n    }\r\n    this.firebaseService.uploadFile()\r\n    this.uploadPercent = this.firebaseService.uploadPercent;\r\n    this.firebaseService.downloadurlchange.subscribe((data: string) => {\r\n      this.downloadURL = data\r\n\r\n    },\r\n      err => { console.log(err.message) })\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.authService.user.subscribe((x: any) => {\r\n      if (x.email) {\r\n        this.email = x.email\r\n      }\r\n    })\r\n    this.href = this.router.url;\r\n    this.x = this.href.split(\"/\")\r\n\r\n    this.usernamParam = this.x[2]\r\n    if (this.x[2] && this.x[3] == \"editProfile\") {\r\n      this.getProfileData()\r\n    }\r\n    this.CreateProfile()\r\n    if (this.x[2] == null) {\r\n      this.checkProfileExist()\r\n    }\r\n  }\r\n  checkProfileExist() {\r\n    this.acrud.getProfile().subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.profileReturned = x[0]\r\n      if (this.profileReturned) {\r\n        this.router.navigate(['myprofile', this.profileReturned.uname])\r\n      }\r\n    })\r\n  }\r\n  getProfileData() {\r\n    this.acrud.getProfile().subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.profileReturned = x[0]\r\n      if (this.usernamParam !== this.profileReturned.uname.trim()) {\r\n       // this.router.navigate([\"home\"])\r\n      }\r\n      this.SetProfileForm(x[0])\r\n\r\n    })\r\n  }\r\n  SetProfileForm(profiled4eturned: any) {\r\n    this.imageSrc = profiled4eturned.imgurl\r\n    this.downloadURL = profiled4eturned.imgurl\r\n    this.ProfileForm.patchValue({\r\n\r\n      uname: profiled4eturned.uname,\r\n      desc: profiled4eturned.desc,\r\n      name: profiled4eturned.name,\r\n      email: this.email,\r\n\r\n    })\r\n  }\r\n\r\n  CreateProfile() {\r\n    this.ProfileForm = this.fb.group({\r\n      imgurl: ['', Validators.required],\r\n      email: [this.email, Validators.required],\r\n      desc: [''],\r\n      name: ['', Validators.required],\r\n      uname: ['', Validators.required,],\r\n\r\n\r\n    });\r\n\r\n  }\r\n  validateUsername(): any {\r\n    let x = \"\"\r\n    if (this.profileReturned) {\r\n\r\n      x = this.profileReturned.uname\r\n    }\r\n    else {\r\n      x = \"\"\r\n    }\r\n\r\n\r\n\r\n\r\n    if (x !== this.username) {\r\n      this.acrud.getPublicProfile(this.username).subscribe(d => {\r\n        if (d !== null) {\r\n          this.erroUsername = \"Username Already taken\"\r\n        }\r\n        else {\r\n          this.erroUsername = null\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  clearError() {\r\n    this.erroUsername = \"\"\r\n  }\r\n\r\n  checkUsername(value) {\r\n    this.username = value\r\n\r\n    this.validateUsername()\r\n  }\r\n\r\n  onSubmit(value: Profile) {\r\n    if (this.x[2] && this.x[3] == \"editProfile\") {\r\n      this.acrud.UpdateProfile(value, this.profileReturned, this.downloadURL)\r\n      this.ProfileForm.reset();\r\n\r\n    }\r\n    else {\r\n      this.acrud.createProfile(value)\r\n      this.ProfileForm.reset();\r\n      //this.router.navigate(['']);\r\n      let url = \"\"\r\n      this.redirectTo(url)\r\n    }\r\n\r\n  }\r\n  redirectTo(url: any) {\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\r\n      this.router.navigate([url]));\r\n    setTimeout(() => {\r\n      window.location.href = \"\";\r\n    }, 1000)\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n\r\n\r\n    <div class=\"col-md-12 col-sm-9 col-xs-12\">\r\n        <form class=\"create-form\" [formGroup]=\"ProfileForm\" novalidate (ngSubmit)=\"onSubmit(ProfileForm.value)\">\r\n\r\n            <div class=\"col-md-4 col-sm-3 col-xs-12\">\r\n                <input type=\"file\" multiple (change)=\"detectFiles($event) \" accept=\"image/x-png,image/gif,image/jpeg\" class=\"form-control\" formControlName=\"imgurl\">\r\n                <img alt=\"\" id=\"blah\" height=\"200\" width=\"200\" class=\"img-rounded\" [src]=\"imageSrc || 'http://placehold.it/180'\" alt=\"your image\" />\r\n\r\n                <div>{{ uploadPercent | async }}</div>\r\n                <a href=\"{{downloadURL}}\"> Click Here To View Your Image</a>\r\n            </div>\r\n            <br>\r\n            <div class=\"col-md-8 col-xs-12\">\r\n\r\n\r\n                <div class=\"form-group \">\r\n                    <label for=\"comment\">Username:</label>\r\n                    <div class=\"input-style\">\r\n                        <input placeholder=\"User Name\" class=\"form-control\" formControlName=\"uname\" (focus)=\"clearError()\" (blur)=\"checkUsername($event.target.value)\">\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.uname\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"ProfileForm.get('uname').hasError(validation.type) && (ProfileForm.get('uname').dirty || ProfileForm.get('uname').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"erroUsername && !oldusername\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"ProfileForm.get('uname') && (ProfileForm.get('uname').dirty || ProfileForm.get('uname').touched)\">\r\n                            {{erroUsername}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group \">\r\n                    <label for=\"comment\">Email:</label>\r\n                    <div class=\"input-style\">\r\n                        <input placeholder=\"User Name\" class=\"form-control\" formControlName=\"email\">\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.email\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"ProfileForm.get('email').hasError(validation.type) && (ProfileForm.get('email').dirty || ProfileForm.get('email').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Name:</label>\r\n                    <div class=\"input-style\">\r\n                        <input placeholder=\"Name\" class=\"form-control\" formControlName=\"name\">\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.name\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"ProfileForm.get('name').hasError(validation.type) && (ProfileForm.get('name').dirty || ProfileForm.get('name').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Description:</label>\r\n                    <textarea class=\"form-control\" rows=\"5\" id=\"comment\" formControlName=\"desc\"></textarea>\r\n\r\n                </div>\r\n\r\n                <div class=\"row submit-button-container\">\r\n                    <div class=\"col-md-4\">\r\n                        <button class=\"btn btn-primary submit-button\" color=\"primary\" type=\"submit\" [disabled]=\"!ProfileForm.valid || erroUsername\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Params, ActivatedRoute, Router } from '@angular/router';\r\nimport { ACrudService } from 'src/app/Authentication/shared/acrud.service';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { UPost } from 'src/app/Unauthenticated/shared/UPost.model';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CrudService } from 'src/app/Unauthenticated/shared/crud.service';\r\nimport { callbackify } from 'util';\r\nimport { count } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.css']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n  exampleForm: FormGroup;\r\n\r\n\r\n  id: number\r\n  posttype\r\n  isFetching: boolean;\r\n  isAll: boolean;\r\n  isPublic: boolean;\r\n  isPrivate: boolean;\r\n\r\n  allPost: UPost[];\r\n  error: string;\r\n  list\r\n\r\n\r\n  values = ['Happy', 'Sad', 'Success', 'Failure', 'Hurt', 'Other'];\r\n  selected = 'Happy'\r\n  imageSrc: string | ArrayBuffer;\r\n  downloadURL: string;\r\n  selectedFile: any;\r\n  uploadPercent: Observable<number>;\r\n  isloggedin: boolean = false;\r\n  privacy: string\r\n  d4: any[];\r\n  onChange(value) {\r\n\r\n    this.selected = value;\r\n\r\n  }\r\n\r\n\r\n  validation_messages = {\r\n    'title': [\r\n      { type: 'required', message: 'Title is required.' }\r\n    ],\r\n    'desc': [\r\n      { type: 'required', message: 'Description is required.' }\r\n    ],\r\n    'category': [\r\n      { type: 'required', message: 'Category is required.' },\r\n    ],\r\n    'name': [\r\n      { type: 'required', message: 'Name is required.' },\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public acrud: ACrudService,\r\n    private fb: FormBuilder,\r\n    private firebaseService: CrudService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.acrud.getDemo1();\r\n    this.acrud.getDemo2()\r\n    this.acrud.getAllData()\r\n\r\n    this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n\r\n          this.id = +params['id'];\r\n          this.posttype = params['type']\r\n        });\r\n\r\n\r\n\r\n\r\n    if (this.posttype === 'allpost') {\r\n      this.getAllPosts()\r\n    }\r\n\r\n    if (this.posttype === 'public') {\r\n      this.getPublicPosts();\r\n    }\r\n\r\n    if (this.posttype === 'private') {\r\n      this.getPriavtePosts()\r\n    }\r\n\r\n    this.EditForm()\r\n\r\n  }\r\n\r\n  getAllPosts() {\r\n    this.isFetching = true\r\n    this.isAll = true;\r\n    this.isPublic = false;\r\n    this.isPrivate = false;\r\n    this.acrud.getAllData()\r\n      .subscribe(data => {\r\n        let x1 = data[0]\r\n        let x2 = data[1]\r\n        let x3 = []\r\n        x3 = this.acrud.seprate(x1)\r\n        let x4 = this.acrud.seprate(x2)\r\n        this.d4 = x3.concat(x4)\r\n        this.setFormValue(this.d4[this.id])\r\n        this.isFetching = false\r\n      },\r\n\r\n        err => {\r\n          this.isFetching = false\r\n          this.error = err\r\n        })\r\n\r\n  }\r\n  setFormValue(d4) {\r\n    this.imageSrc = d4.imgurl\r\n    this.downloadURL = d4.imgurl\r\n    this.exampleForm.patchValue({\r\n\r\n      title: d4.title,\r\n      desc: d4.desc,\r\n      category: d4.category,\r\n      name: d4.name,\r\n      privacy: d4.privacy\r\n    })\r\n  }\r\n  getPublicPosts() {\r\n    this.isFetching = true\r\n    this.isAll = false;\r\n    this.isPublic = true;\r\n    this.isPrivate = false;\r\n    this.acrud.getPublicPost()\r\n      .subscribe(data => {\r\n        let x3 = this.acrud.seprate(data)\r\n        this.d4 = x3\r\n\r\n        this.setFormValue(this.d4[this.id])\r\n        this.isFetching = false\r\n      },\r\n\r\n        err => {\r\n          this.isFetching = false\r\n          this.error = err\r\n        })\r\n  }\r\n  getPriavtePosts() {\r\n    this.isFetching = true\r\n    this.isAll = false;\r\n    this.isPublic = false;\r\n    this.isPrivate = true;\r\n    this.acrud.getPrivatePost()\r\n      .subscribe(data => {\r\n        let x3 = this.acrud.seprate(data)\r\n        this.d4 = x3\r\n\r\n        this.setFormValue(this.d4[this.id])\r\n        this.isFetching = false\r\n      },\r\n\r\n        err => {\r\n          this.isFetching = false\r\n          this.error = err\r\n        })\r\n  }\r\n\r\n\r\n  detectFiles(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    if (this.selectedFile.type.split('/')[0] !== 'image') {\r\n      return alert('Pleas select an Image file');\r\n    }\r\n    this.firebaseService.getdata(this.selectedFile)\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = e => this.imageSrc = reader.result;\r\n      reader.readAsDataURL(file);\r\n\r\n    }\r\n    this.firebaseService.uploadFile()\r\n    this.uploadPercent = this.firebaseService.uploadPercent;\r\n    this.firebaseService.downloadurlchange.subscribe((data: string) => {\r\n      this.downloadURL = data\r\n\r\n    },\r\n      err => { console.log(err.message) })\r\n\r\n\r\n  }\r\n\r\n  EditForm() {\r\n    this.exampleForm = this.fb.group({\r\n      imgurl: [''],\r\n      title: ['', Validators.required],\r\n      desc: ['', [Validators.required, Validators.minLength(50)]],\r\n      category: [this.selected, Validators.required],\r\n      subcategory: ['  ', Validators.required],\r\n      name: ['', Validators.required],\r\n      privacy: [\"true\"],\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onSubmit(value: UPost) {\r\n    if (this.posttype === 'allpost' && value.privacy) {\r\n      this.getAllPosts()\r\n    }\r\n\r\n    if (this.posttype === 'public') {\r\n      this.getPublicPosts();\r\n    }\r\n\r\n    if (this.posttype === 'private') {\r\n      this.getPriavtePosts()\r\n    }\r\n\r\n    this.acrud.passParams(this.posttype, this.id)\r\n    this.acrud.update(this.id, this.d4[this.id], value, this.downloadURL)\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-10 col-sm-12 col-xs-12 center-block\">\r\n    <div *ngIf=\"!isFetching && d4;else loading\">\r\n        <form class=\"create-form\" [formGroup]=\"exampleForm\" novalidate (ngSubmit)=\"onSubmit(exampleForm.value)\">\r\n\r\n            <div class=\"col-md-4 col-sm-3 col-xs-12\">\r\n                <input type=\"file\" multiple (change)=\"detectFiles($event) \" accept=\"image/x-png,image/gif,image/jpeg\" class=\"form-control\" formControlName=\"imgurl\">\r\n                <img id=\"blah\" height=\"200\" width=\"200\" class=\"img-rounded\" [src]=\"imageSrc || 'http://placehold.it/180'\" alt=\"your image\" />\r\n\r\n                <div>{{ uploadPercent | async }}</div>\r\n                <a href=\"{{downloadURL}}\">your url is View your Image here</a>\r\n            </div>\r\n            <br>\r\n\r\n            <div class=\"col-md-8 col-sm-9 col-xs-12\">\r\n\r\n\r\n                <div class=\"form-group \">\r\n                    <label for=\"comment\">Title:</label>\r\n                    <div class=\"input-style\">\r\n                        <input placeholder=\"Title\" class=\"form-control\" formControlName=\"title\">\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.title\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get('title').hasError(validation.type) && (exampleForm.get('title').dirty || exampleForm.get('title').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Description:</label>\r\n                    <textarea class=\"form-control\" rows=\"5\" id=\"comment\" formControlName=\"desc\"></textarea>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.desc\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get('desc').hasError(validation.type) && (exampleForm.get('desc').dirty || exampleForm.get('desc').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"sel1\">Category list:</label>\r\n                    <select class=\"form-control\" formControlName=\"category\" #t (change)=\"onChange(t.value)\">\r\n                        <option *ngFor=\"let value of values\">{{value}} </option>\r\n                    </select>\r\n\r\n                    <ng-container *ngFor=\"let validation of validation_messages.category\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get('category').hasError(validation.type) && (exampleForm.get('category').dirty || exampleForm.get('category').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"input-style\" *ngIf=\"selected == 'Other'\">\r\n                        <input placeholder=\"Other category\" class=\"form-control\" formControlName=\"subcategory\">\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Name:</label>\r\n                    <div class=\"input-style\">\r\n                        <input placeholder=\"Name\" class=\"form-control\" formControlName=\"name\">\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.name\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get('name').hasError(validation.type) && (exampleForm.get('name').dirty || exampleForm.get('name').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"form-group \">\r\n                    <label for=\"comment\">Keep your post Public:</label>\r\n                    <div class=\"input-style\">\r\n                        <label class=\"md-check\">\r\n                            <input type=\"radio\" value=\"true\" name=\"privacy\" formControlName=\"privacy\" checked=\"true\">\r\n                            Yes keep my post Public\r\n                        </label>\r\n                        <br>\r\n                        <label class=\"md-check\">\r\n                            <input type=\"radio\" value=\"false\" name=\"privacy\" formControlName=\"privacy\">\r\n                            No keep it private\r\n                        </label>\r\n                    </div>\r\n                    <ng-container *ngFor=\"let validation of validation_messages.title\">\r\n                        <div class=\"help-block has-error\" *ngIf=\"exampleForm.get('title').hasError(validation.type) && (exampleForm.get('title').dirty || exampleForm.get('title').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"row submit-button-container\">\r\n                    <div class=\"col-md-4\">\r\n                        <button class=\"btn btn-primary submit-button\" color=\"primary\" type=\"submit\" [disabled]=\"!exampleForm.valid\">Create</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n    <ng-template #loading>\r\n        <div *ngIf=\"isFetching && !error\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"error\" class=\"loading-text\">\r\n\r\n\r\n            <p> {{error}}</p>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<!-- <a class=\"btn btn-primary submit-button\" (click)=\"somedata()\" color=\"primary\" type=\"submit\">Create</a> -->","import { Component, OnInit } from '@angular/core';\r\nimport { UPost } from 'src/app/Unauthenticated/shared/UPost.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CrudService } from 'src/app/Unauthenticated/shared/crud.service';\r\nimport { AuthService } from 'src/app/Authentication/shared/auth.service';\r\nimport { ACrudService } from 'src/app/Authentication/shared/acrud.service';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-post',\r\n  templateUrl: './user-post.component.html',\r\n  styleUrls: ['./user-post.component.css']\r\n})\r\nexport class UserPostComponent implements OnInit {\r\n  selectedIndex: number = 0;\r\n  type = ['allpost', 'public', 'private']\r\n\r\n  private puSub: Subscription;\r\n  private prSub: Subscription\r\n  private allSub: Subscription;\r\n\r\n  isLoading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  allpost: UPost[];\r\n  public_post: UPost[] = null\r\n  private_post: UPost[];\r\n  isFetching = true;\r\n  isAll = false;\r\n  isPublic = false;\r\n  isPrivate = false;\r\n  url\r\n  href: string\r\n  error: string\r\n  count_all: number = 0\r\n  count_pr: number = 0\r\n  count_pb: number = 0\r\n  searchText;\r\n\r\n  constructor(public acrud: ACrudService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private authservice: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.href = this.router.url;\r\n    this.url = this.href.split(\"/\")\r\n    this.url = this.url[2]\r\n    this.acrud.getDemo1();\r\n    this.acrud.getDemo2()\r\n    this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n\r\n          this.url = params['type']\r\n          if (this.url !== 'allpost' && this.url !== 'public' && this.url !== 'private') {\r\n            this.router.navigate([\"home\"])\r\n\r\n          }\r\n          if (this.url === 'allpost') {\r\n            this.getAllPosts()\r\n          }\r\n\r\n          if (this.url === 'public') {\r\n            this.getPublicPosts();\r\n          }\r\n\r\n          if (this.url === 'private') {\r\n            this.getPriavtePosts()\r\n          }\r\n        });\r\n  }\r\n  getAllPosts() {\r\n    this.isLoading$.next(true);\r\n    this.isFetching = true\r\n    this.isAll = true;\r\n    this.isPublic = false;\r\n    this.isPrivate = false;\r\n    this.acrud.getAllData()\r\n      .subscribe(data => {\r\n        debugger\r\n        let x1 = data[0]\r\n        let x2 = data[1]\r\n        let x3 = []\r\n        x3 = this.acrud.seprate(x1)\r\n        let x4 = this.acrud.seprate(x2)\r\n        this.allpost = x3.concat(x4)\r\n        this.sortDesecendingByDate(this.allpost)\r\n        this.count_all = this.allpost.length\r\n        this.isLoading$.next(false);\r\n        this.isFetching = false\r\n      },\r\n        err => {\r\n          this.error = err\r\n        })\r\n  }\r\n\r\n  getPublicPosts() {\r\n    this.isLoading$.next(true);\r\n    this.isAll = false;\r\n    this.isPublic = true;\r\n    this.isPrivate = false;\r\n    this.isFetching = true;\r\n    this.puSub = this.acrud.pu.subscribe(d => {\r\n      this.public_post = d\r\n      debugger\r\n      if (this.public_post) {\r\n        this.sortDesecendingByDate(this.public_post)\r\n      }\r\n      this.isFetching = false;\r\n    },\r\n      error => {\r\n        this.isFetching = false;\r\n        this.error = error;\r\n      },\r\n      () => {\r\n        this.isFetching = false;\r\n      })\r\n  }\r\n  getPriavtePosts() {\r\n    this.isAll = false;\r\n    this.isPublic = false;\r\n    this.isPrivate = true;\r\n    this.isFetching = true;\r\n    this.prSub = this.acrud.pr.subscribe(d => {\r\n      debugger\r\n      this.private_post = d\r\n      this.count_pr = this.private_post.length\r\n      this.isFetching = false\r\n    },\r\n      error => {\r\n        this.error = error;\r\n        this.isFetching = false\r\n      })\r\n  }\r\n\r\n\r\n  sortDesecendingByDate(data) {\r\n    return data.sort((a: any, b: any) =>\r\n      <any>new Date(b.created_date) - <any>new Date(a.created_date)\r\n    )\r\n  }\r\n  ngOnDestroy() {\r\n\r\n    if (this.puSub && this.public_post) {\r\n      this.puSub.unsubscribe()\r\n    }\r\n\r\n    if (this.prSub && this.private_post) {\r\n      this.prSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3 col-sm-12\">\r\n        <div class=\"list-group\">\r\n            <a class=\"list-group-item\" [ngClass]=\"{ active: isAll == true }\" [routerLink]=\"['/myposts', type[0]]\" (click)=\"getAllPosts()\">All Posts </a>\r\n\r\n            <a class=\"list-group-item\" [ngClass]=\"{ active: isPublic == true }\" [routerLink]=\"['/myposts', type[1]]\" (click)=\"getPublicPosts()\">Public Posts</a>\r\n\r\n            <a class=\"list-group-item\" [ngClass]=\"{ active: isPrivate == true }\" [routerLink]=\"['/myposts', type[2]]\" (click)=\"getPriavtePosts()\">Private Posts</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-7 col-sm-12 col-xs-12 post-cards\">\r\n        <div *ngIf=\"isAll && allpost?.length>0;else loading\">\r\n\r\n\r\n            <div class=\"card row\" *ngFor=\"let i of allpost  ; let c = index\">\r\n                <a [routerLink]=\"[c]\">\r\n                    <div class=\"col-md-4 col-xs-12 img-col col-md-push-8\">\r\n                        <img src=\"{{ i.imgurl }} \" alt=\"Avatar \" style=\"width: 100%;\" class=\"img-responsive\" alt=\"img\" />\r\n                    </div>\r\n                    <div class=\"col-md-8 col-xs-12 main-content col-md-pull-4\">\r\n                        <h2 class=\"title\">\r\n                            {{ i.title }}\r\n                        </h2>\r\n\r\n                        <p class=\"desc desc1\" [innerHTML]=\"i.desc| noSanitize\"></p>\r\n                    </div>\r\n                    <div class=\"author-date col-md-6 col-xs-12\">\r\n                        <p class=\"author-name\">\r\n                            By : {{ i.name }}\r\n                        </p>\r\n                        <p class=\"date\">\r\n                            On : {{ i.created_date | date }}\r\n                        </p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div *ngIf=\"isPublic  && public_post?.length>0;else loading2\" class=\"col-md-7 col-sm-12 col-xs-12\">\r\n        <div class=\"card row\" *ngFor=\"let i of public_post; let c = index\">\r\n            <a [routerLink]=\"[c]\">\r\n                <div class=\"col-md-4 col-xs-12 img-col col-md-push-8\">\r\n                    <img src=\"{{ i.imgurl }} \" alt=\"Avatar \" style=\"width: 100%;\" class=\"img-responsive\" alt=\"img\" />\r\n                </div>\r\n                <div class=\"col-md-8 col-xs-12 main-content col-md-pull-4\">\r\n                    <h2 class=\"title\">\r\n                        {{ i.title }}\r\n                    </h2>\r\n\r\n                    <p class=\"desc desc1\" [innerHTML]=\"i.desc| noSanitize\"></p>\r\n                </div>\r\n                <div class=\"author-date col-md-6 col-xs-12\">\r\n                    <p class=\"author-name\">\r\n                        By : {{ i.name }}\r\n                    </p>\r\n                    <p class=\"date\">\r\n                        On : {{ i.created_date | date }}\r\n                    </p>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isPrivate  && private_post.length>0;else loading3\" class=\"col-md-7 col-sm-12 col-xs-12\">\r\n        <div class=\"card row\" *ngFor=\"let i of private_post; let c = index\">\r\n            <a [routerLink]=\"[c]\">\r\n                <div class=\"col-md-4 col-xs-12 img-col col-md-push-8\">\r\n                    <img src=\"{{ i.imgurl }} \" alt=\"Avatar \" style=\"width: 100%;\" class=\"img-responsive\" alt=\"img\" />\r\n                </div>\r\n                <div class=\"col-md-8 col-xs-12 main-content col-md-pull-4\">\r\n                    <h2 class=\"title\">\r\n                        {{ i.title }}\r\n                    </h2>\r\n\r\n                    <p class=\"desc desc1\" [innerHTML]=\"i.desc| noSanitize\"></p>\r\n                </div>\r\n                <div class=\"author-date col-md-6 col-xs-12\">\r\n                    <p class=\"author-name\">\r\n                        By : {{ i.name }}\r\n                    </p>\r\n                    <p class=\"date\">\r\n                        On : {{ i.created_date | date }}\r\n                    </p>\r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <ng-template #loading>\r\n\r\n        <div *ngIf=\"isAll && isFetching\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"isAll &&  !isFetching\" class=\"no-text\">\r\n\r\n            <h3>No Post Found</h3>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #loading2>\r\n\r\n        <div *ngIf=\"isPublic && isFetching\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"isPublic &&  !isFetching\" class=\"no-text\">\r\n\r\n            <h3>No Public Post Found</h3>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #loading3>\r\n\r\n        <div *ngIf=\"isPrivate &&  isFetching \" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"isPrivate &&  !isFetching\" class=\"no-text\">\r\n\r\n            <h3>No Private Post Found</h3>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <div class=\"col-sm-4 col-xs-12\"></div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ACrudService } from 'src/app/Authentication/shared/acrud.service';\r\nimport { AuthService } from 'src/app/Authentication/shared/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-view-only-public-post',\r\n  templateUrl: './view-only-public-post.component.html',\r\n  styleUrls: ['./view-only-public-post.component.css']\r\n})\r\nexport class ViewOnlyPublicPostComponent implements OnInit {\r\n  unameParam: string;\r\n  PublicPosts: any[];\r\n  PrivatePosts: any[];\r\n  isFetching:Boolean=false;\r\n  pbcount: number = 0\r\n  prcount: number = 0;\r\n  allcount: number = 0\r\n  constructor(\r\n    private acrud: ACrudService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let url = this.router.url;\r\n    let urlpart = url.split(\"/\")\r\n    this.unameParam = urlpart[2]\r\n\r\n    this.getUidFromService()\r\n  }\r\n  getUidFromService() {\r\n    this.isFetching=true\r\n    this.acrud.getPublicProfile(this.unameParam).subscribe(d => {\r\n     \r\n      let x = this.acrud.seprate(d)\r\n      let y = x[0].id\r\n\r\n      this.getPublicPostsFromProfileId(y)\r\n      this.getPrivatePstsFromProfileId(y)\r\n      this.isFetching=false\r\n\r\n    })\r\n  }\r\n  getPrivatePstsFromProfileId(y: any) {\r\n    this.isFetching=true\r\n    this.acrud.getPrivateFromProfileId(y).subscribe(d => {\r\n      this.isFetching=false\r\n      let x = this.acrud.seprate(d)\r\n\r\n      //this.PublicPosts = x\r\n      this.prcount = x.length\r\n      this.allcount += this.prcount\r\n    })\r\n  }\r\n  getPublicPostsFromProfileId(y: any) {\r\n    this.isFetching=true\r\n    this.acrud.getPublicPostsFromProfileId(y).subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.sortDesecendingByDate(x)\r\n      this.PublicPosts = x\r\n\r\n      this.pbcount = this.PublicPosts.length\r\n      this.allcount += this.pbcount\r\n      this.isFetching=false\r\n    })\r\n  }\r\n\r\n  sortDesecendingByDate(data) {\r\n    return data.sort((a: any, b: any) =>\r\n      <any>new Date(b.created_date) - <any>new Date(a.created_date)\r\n    )\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3 col-sm-12\">\r\n        <div class=\"list-group\">\r\n            <a class=\"list-group-item\" routerLinkActive=\"active\" [routerLink]=\"['/myprofile',unameParam ]\" [routerLinkActiveOptions]=\"{ exact: true }\">Profile</a>\r\n\r\n            <a class=\"list-group-item\" routerLinkActive=\"active\" [routerLink]=\"['/myprofile',unameParam ,'publicposts']\" [routerLinkActiveOptions]=\"{ exact: true }\">Public Posts\r\n                <span class=\"count-post\"> ({{pbcount}})</span></a>\r\n\r\n            <a class=\"list-group-item disabled\" routerLinkActive=\"active\" [routerLink]=\"['']\" [routerLinkActiveOptions]=\"{ exact: true }\">Private Posts\r\n                <span class=\"count-post\"> ({{prcount}})</span></a>\r\n            <a class=\"list-group-item disabled\" routerLinkActive=\"active\" [routerLink]=\"['']\" [routerLinkActiveOptions]=\"{ exact: true }\">All Posts\r\n                <span class=\"count-post\"> ({{allcount}})</span></a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-7 col-sm-12 col-xs-12 post-cards\">\r\n        <div *ngIf=\"PublicPosts?.length>0 && !isFetching\">\r\n            <div *ngFor=\"let i of  PublicPosts;let c = index\">\r\n                <div class=\"card row\">\r\n                    <a [routerLink]=\"[c]\">\r\n\r\n                        <div class=\"col-md-4 col-xs-12 img-col col-md-push-8\">\r\n                            <img src=\"{{ i.imgurl }} \" alt=\"Avatar \" style=\"width: 100%;\" class=\"img-responsive\" />\r\n                        </div>\r\n                        <div class=\"col-md-8 col-xs-12 main-content col-md-pull-4\">\r\n\r\n                            <h2 class=\"title\">\r\n                                {{ i.title }}\r\n                            </h2>\r\n\r\n                            <p class=\"desc desc1\" [innerHTML]=\"i.desc| noSanitize\"></p>\r\n                        </div>\r\n\r\n                        <div class=\"author-date col-md-6 col-xs-12\">\r\n                            <p class=\"author-name\">\r\n                                By {{ i.name }}\r\n                            </p>\r\n\r\n                            <p class=\"date\">\r\n                                On {{ i.created_date | date }}\r\n                            </p>\r\n                        </div>\r\n\r\n                    </a>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div *ngIf=\"isFetching\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n\r\n        </div>\r\n\r\n        <div *ngIf=\"!isFetching && PublicPosts?.length<1\" class=\"loading-text\">\r\n            <h3>No Post Found</h3>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ACrudService } from 'src/app/Authentication/shared/acrud.service';\r\nimport { ProfileComponent } from '../profile/profile.component';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/Authentication/shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-view-profile',\r\n  templateUrl: './view-profile.component.html',\r\n  styleUrls: ['./view-profile.component.css']\r\n})\r\nexport class ViewProfileComponent implements OnInit {\r\n\r\n  unameParam: string\r\n  ProfileData: any\r\n  username: string;\r\n  isAuthenticated = false;\r\n  myuname: string\r\n  isloading: boolean = true;\r\n  private userSub: Subscription;\r\n  ismyself: boolean = false\r\n\r\n\r\n  pbcount: number = 0\r\n  prcount: number = 0;\r\n  allcount: number = 0\r\n\r\n  constructor(\r\n    private acrud: ACrudService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userSub = this.authService.user.subscribe(user => {\r\n\r\n      if (user) {\r\n        this.isAuthenticated = !!user;\r\n\r\n      }\r\n\r\n    });\r\n\r\n    this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n          this.unameParam = params['username'];\r\n          this.getUidFromService()\r\n\r\n          if (this.isAuthenticated) {\r\n            this.acrud.getProfile().subscribe(d => {\r\n              let x = this.acrud.seprate(d)\r\n\r\n              this.myuname = x[0].uname\r\n              if (this.myuname == this.unameParam) {\r\n                this.ismyself = true;\r\n                this.getPrfoileFromPersonalDb()\r\n              }\r\n              else {\r\n                this.ismyself = false\r\n                this.getPrfoileFromPublicDb()\r\n              }\r\n            })\r\n\r\n          }\r\n          if (!this.isAuthenticated) {\r\n            this.ismyself = false\r\n            this.getPrfoileFromPublicDb()\r\n\r\n          }\r\n\r\n\r\n        })\r\n\r\n  }\r\n  getPrfoileFromPublicDb() {\r\n    this.isloading = true\r\n    this.acrud.getPublicProfile(this.unameParam).subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.ProfileData = x[0]\r\n      this.isloading = false\r\n    })\r\n  }\r\n  getPrfoileFromPersonalDb() {\r\n    this.isloading = true\r\n    this.acrud.getProfile().subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.ProfileData = x[0]\r\n      this.username = this.ProfileData.uname\r\n      this.isloading = false\r\n\r\n    })\r\n  }\r\n\r\n  getUidFromService() {\r\n    this.acrud.getPublicProfile(this.unameParam).subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      if (x[0]) {\r\n        let y = x[0].id\r\n        this.getPublicPostsFromProfileId(y)\r\n        this.getPrivatePostsFromProfileId(y)\r\n\r\n      }\r\n      else {\r\n        this.router.navigate([\"home\"])\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n  getPrivatePostsFromProfileId(y: any) {\r\n\r\n    this.acrud.getPrivateFromProfileId(y).subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n      this.prcount = x.length\r\n      this.allcount += this.prcount\r\n\r\n    })\r\n\r\n  }\r\n  getPublicPostsFromProfileId(y: any) {\r\n\r\n    this.acrud.getPublicPostsFromProfileId(y).subscribe(d => {\r\n      let x = this.acrud.seprate(d)\r\n\r\n      this.pbcount = x.length\r\n      this.allcount += this.pbcount\r\n\r\n    })\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!isloading;else loading\">\r\n    <div class=\"col-md-3 col-sm-12\" *ngIf=\"isAuthenticated && ismyself\">\r\n        <div class=\"list-group\">\r\n            <a class=\"list-group-item\" routerLinkActive=\"active\" [routerLink]=\"['/myprofile',unameParam]\">Profile</a>\r\n            <a class=\"list-group-item\" [routerLink]=\"['/myprofile',username,'editProfile']\">Edit Profile</a>\r\n\r\n            <a class=\"list-group-item\" [routerLink]=\"['/myposts', 'public']\">Public Posts\r\n                <span class=\"count-post\"> ({{pbcount}})</span></a>\r\n\r\n            <a class=\"list-group-item\" [routerLink]=\"['/myposts', 'private']\">Private Posts\r\n                <span class=\"count-post\"> ({{prcount}})</span></a>\r\n            <a class=\"list-group-item\" [routerLink]=\"['/myposts']\">All Posts\r\n                <span class=\"count-post\"> ({{allcount}})</span></a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-3 col-sm-12\" *ngIf=\"!isAuthenticated || !ismyself\">\r\n        <div class=\"list-group\">\r\n            <a class=\"list-group-item\" routerLinkActive=\"active\" [routerLink]=\"['/myprofile',unameParam]\">Profile</a>\r\n\r\n            <a class=\"list-group-item\" routerLinkActive=\"active\" [routerLink]=\"['publicposts']\">Public Posts\r\n                <span class=\"count-post\"> ({{pbcount}})</span>\r\n            </a>\r\n\r\n            <a class=\"list-group-item disabled\" [routerLink]=\"['']\">Private Posts\r\n                <span class=\"count-post\"> ({{prcount}})</span></a>\r\n\r\n            <a class=\"list-group-item disabled\" [routerLink]=\"['']\">All Posts\r\n                <span class=\"count-post\"> ({{allcount}})</span></a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-md-7 col-sm-12 center-block\">\r\n        <div class=\"row\" *ngIf=\"ProfileData\">\r\n            <div class=\"col-md-4 col-xs-12 col-md-push-8\">\r\n                <img [src]=\"ProfileData.imgurl\" class=\"img-circle\" alt=\"\" width=\"150\" height=\"150\">\r\n\r\n            </div>\r\n            <div class=\"col-md-8 col-xs-12 col-md-pull-4\">\r\n                <h2>\r\n                    Name : {{ProfileData.name}}\r\n                </h2>\r\n\r\n                <h5>\r\n                    <b>Username : </b> {{ProfileData.uname}}\r\n                </h5>\r\n\r\n                <p>\r\n                    <b>Email : </b> {{ProfileData.email}}\r\n                </p>\r\n\r\n                <p>\r\n                    <b>Bio : </b> {{ProfileData.desc}}\r\n                </p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"col-md-9 col-sm-12 \">\r\n    <ng-template #loading>\r\n\r\n        <div *ngIf=\"isloading\" class=\"loading-text\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n\r\n    </ng-template>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\nfirebaseConfig :{\r\n  apiKey: \"AIzaSyBXz2WsXGB25SCJ8mNg-BJIL495RWT_fqY\",\r\n  authDomain: \"fir-2f842.firebaseapp.com\",\r\n  databaseURL: \"https://fir-2f842.firebaseio.com\",\r\n  projectId: \"fir-2f842\",\r\n  storageBucket: \"fir-2f842.appspot.com\",\r\n  messagingSenderId: \"115483508992\",\r\n  appId: \"1:115483508992:web:46907f01046236df55f3e5\"\r\n}\r\n}\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}